{"ast":null,"code":"var _jsxFileName = \"/Users/ayushratan/Desktop/projects/dcnn/Advanced-Protocol-Analysis-Security-Dashboard/frontend/src/components/NetworkVisualization.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { motion } from 'framer-motion';\nimport { FiRefreshCw, FiPlay, FiPause, FiSettings, FiPlus, FiMinus, FiSave, FiUpload } from 'react-icons/fi';\nimport axios from 'axios';\nimport './NetworkVisualization.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NetworkVisualization = () => {\n  _s();\n  var _nodePositions$select, _nodePositions$select2;\n  const canvasRef = useRef(null);\n  const [networkData, setNetworkData] = useState({\n    nodes: [],\n    links: []\n  });\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [selectedLink, setSelectedLink] = useState(null);\n  const [isAnimating, setIsAnimating] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [dragOffset, setDragOffset] = useState({\n    x: 0,\n    y: 0\n  });\n  const [mode, setMode] = useState('view'); // 'view', 'add-node', 'add-link', 'edit'\n  const [tempLink, setTempLink] = useState(null);\n  const [nodePositions, setNodePositions] = useState({});\n  const [canvasSize, setCanvasSize] = useState({\n    width: 800,\n    height: 600\n  });\n  const [showControls, setShowControls] = useState(true);\n\n  // Dynamic node ID generator\n  const [nextNodeId, setNextNodeId] = useState(1);\n  useEffect(() => {\n    fetchNetworkData();\n    updateCanvasSize();\n    window.addEventListener('resize', updateCanvasSize);\n    return () => window.removeEventListener('resize', updateCanvasSize);\n  }, []);\n  useEffect(() => {\n    if (networkData.nodes.length > 0) {\n      drawNetwork();\n    }\n  }, [networkData, selectedNode, selectedLink, isAnimating, tempLink, nodePositions]);\n  const updateCanvasSize = () => {\n    var _canvasRef$current;\n    const container = (_canvasRef$current = canvasRef.current) === null || _canvasRef$current === void 0 ? void 0 : _canvasRef$current.parentElement;\n    if (container) {\n      setCanvasSize({\n        width: container.clientWidth,\n        height: Math.max(600, container.clientHeight - 100)\n      });\n    }\n  };\n  const fetchNetworkData = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get('/api/network/topology');\n      if (response.data.success) {\n        setNetworkData(response.data);\n        // Initialize positions if not set\n        const positions = {};\n        response.data.nodes.forEach((node, index) => {\n          if (!nodePositions[node.id]) {\n            positions[node.id] = {\n              x: 150 + index % 4 * 150,\n              y: 150 + Math.floor(index / 4) * 150\n            };\n          }\n        });\n        setNodePositions(prev => ({\n          ...prev,\n          ...positions\n        }));\n\n        // Update next node ID\n        const maxId = Math.max(0, ...response.data.nodes.map(n => isNaN(parseInt(n.id)) ? 0 : parseInt(n.id)));\n        setNextNodeId(maxId + 1);\n      } else {\n        setError('Failed to fetch network data');\n      }\n    } catch (err) {\n      setError('Error connecting to API');\n      console.error('Network fetch error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const saveNetwork = async () => {\n    try {\n      setLoading(true);\n      await axios.post('/api/network/save', {\n        nodes: networkData.nodes,\n        links: networkData.links,\n        positions: nodePositions\n      });\n      setError(null);\n    } catch (err) {\n      setError('Failed to save network');\n      console.error('Save error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const addNode = (x, y) => {\n    const nodeId = nextNodeId.toString();\n    const newNode = {\n      id: nodeId,\n      label: `Node ${nodeId}`,\n      neighbors: []\n    };\n    setNetworkData(prev => ({\n      ...prev,\n      nodes: [...prev.nodes, newNode]\n    }));\n    setNodePositions(prev => ({\n      ...prev,\n      [nodeId]: {\n        x,\n        y\n      }\n    }));\n    setNextNodeId(prev => prev + 1);\n  };\n  const removeNode = nodeId => {\n    setNetworkData(prev => ({\n      nodes: prev.nodes.filter(n => n.id !== nodeId),\n      links: prev.links.filter(l => l.source !== nodeId && l.target !== nodeId)\n    }));\n    setNodePositions(prev => {\n      const newPos = {\n        ...prev\n      };\n      delete newPos[nodeId];\n      return newPos;\n    });\n    if (selectedNode === nodeId) setSelectedNode(null);\n  };\n  const addLink = (sourceId, targetId, distance = 1) => {\n    // Check if link already exists\n    const linkExists = networkData.links.some(l => l.source === sourceId && l.target === targetId || l.source === targetId && l.target === sourceId);\n    if (!linkExists && sourceId !== targetId) {\n      const newLink = {\n        source: sourceId,\n        target: targetId,\n        distance: distance\n      };\n      setNetworkData(prev => ({\n        ...prev,\n        links: [...prev.links, newLink]\n      }));\n    }\n  };\n  const removeLink = (sourceId, targetId) => {\n    setNetworkData(prev => ({\n      ...prev,\n      links: prev.links.filter(l => !(l.source === sourceId && l.target === targetId || l.source === targetId && l.target === sourceId))\n    }));\n  };\n  const getNodeAt = (x, y) => {\n    for (const node of networkData.nodes) {\n      const pos = nodePositions[node.id];\n      if (pos) {\n        const dx = x - pos.x;\n        const dy = y - pos.y;\n        if (Math.sqrt(dx * dx + dy * dy) <= 25) {\n          return node.id;\n        }\n      }\n    }\n    return null;\n  };\n  const drawNetwork = () => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    canvas.width = canvasSize.width;\n    canvas.height = canvasSize.height;\n\n    // Clear canvas\n    ctx.fillStyle = 'rgba(10, 10, 15, 0.95)';\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n    // Draw grid\n    drawGrid(ctx, canvas.width, canvas.height);\n\n    // Draw links\n    networkData.links.forEach(link => {\n      drawLink(ctx, link);\n    });\n\n    // Draw temporary link\n    if (tempLink) {\n      drawTempLink(ctx, tempLink);\n    }\n\n    // Draw nodes\n    networkData.nodes.forEach(node => {\n      drawNode(ctx, node);\n    });\n\n    // Draw node labels\n    networkData.nodes.forEach(node => {\n      drawNodeLabel(ctx, node);\n    });\n\n    // Draw mode indicator\n    drawModeIndicator(ctx);\n  };\n  const drawGrid = (ctx, width, height) => {\n    ctx.strokeStyle = 'rgba(0, 212, 255, 0.05)';\n    ctx.lineWidth = 1;\n    for (let x = 0; x < width; x += 30) {\n      ctx.beginPath();\n      ctx.moveTo(x, 0);\n      ctx.lineTo(x, height);\n      ctx.stroke();\n    }\n    for (let y = 0; y < height; y += 30) {\n      ctx.beginPath();\n      ctx.moveTo(0, y);\n      ctx.lineTo(width, y);\n      ctx.stroke();\n    }\n  };\n  const drawLink = (ctx, link) => {\n    const sourcePos = nodePositions[link.source];\n    const targetPos = nodePositions[link.target];\n    if (!sourcePos || !targetPos) return;\n    const isSelected = selectedLink === `${link.source}-${link.target}` || selectedLink === `${link.target}-${link.source}`;\n    ctx.strokeStyle = isSelected ? '#ff6b6b' : selectedNode === link.source || selectedNode === link.target ? '#00d4ff' : 'rgba(0, 212, 255, 0.4)';\n    ctx.lineWidth = isSelected ? 4 : selectedNode === link.source || selectedNode === link.target ? 3 : 2;\n    ctx.beginPath();\n    ctx.moveTo(sourcePos.x, sourcePos.y);\n    ctx.lineTo(targetPos.x, targetPos.y);\n    ctx.stroke();\n\n    // Draw distance label\n    const midX = (sourcePos.x + targetPos.x) / 2;\n    const midY = (sourcePos.y + targetPos.y) / 2;\n    ctx.fillStyle = isSelected ? '#ff6b6b' : '#ffe66d';\n    ctx.font = '12px Inter';\n    ctx.textAlign = 'center';\n    ctx.fillText(link.distance.toString(), midX, midY - 5);\n\n    // Draw data flow animation\n    if (isAnimating) {\n      drawDataFlow(ctx, sourcePos, targetPos);\n    }\n  };\n  const drawTempLink = (ctx, tempLink) => {\n    const sourcePos = nodePositions[tempLink.source];\n    if (!sourcePos) return;\n    ctx.strokeStyle = 'rgba(255, 255, 255, 0.6)';\n    ctx.lineWidth = 2;\n    ctx.setLineDash([5, 5]);\n    ctx.beginPath();\n    ctx.moveTo(sourcePos.x, sourcePos.y);\n    ctx.lineTo(tempLink.x, tempLink.y);\n    ctx.stroke();\n    ctx.setLineDash([]);\n  };\n  const drawDataFlow = (ctx, source, target) => {\n    const time = Date.now() * 0.003;\n    const progress = (Math.sin(time) + 1) / 2;\n    const x = source.x + (target.x - source.x) * progress;\n    const y = source.y + (target.y - source.y) * progress;\n    ctx.fillStyle = '#4ecdc4';\n    ctx.shadowColor = '#4ecdc4';\n    ctx.shadowBlur = 10;\n    ctx.beginPath();\n    ctx.arc(x, y, 3, 0, Math.PI * 2);\n    ctx.fill();\n    ctx.shadowBlur = 0;\n  };\n  const drawNode = (ctx, node) => {\n    const pos = nodePositions[node.id];\n    if (!pos) return;\n    const isSelected = selectedNode === node.id;\n    const time = Date.now() * 0.002;\n    const pulse = Math.sin(time) * 0.1 + 1;\n\n    // Draw node glow\n    if (isSelected || isAnimating) {\n      ctx.shadowColor = isSelected ? '#00d4ff' : '#ff6b6b';\n      ctx.shadowBlur = 20 * pulse;\n    }\n\n    // Draw main node\n    ctx.fillStyle = isSelected ? '#00d4ff' : '#ff6b6b';\n    ctx.beginPath();\n    ctx.arc(pos.x, pos.y, isSelected ? 25 * pulse : 20, 0, Math.PI * 2);\n    ctx.fill();\n    ctx.shadowBlur = 0;\n\n    // Draw inner circle\n    ctx.fillStyle = isSelected ? 'rgba(255, 255, 255, 0.9)' : 'rgba(255, 255, 255, 0.7)';\n    ctx.beginPath();\n    ctx.arc(pos.x, pos.y, isSelected ? 15 : 12, 0, Math.PI * 2);\n    ctx.fill();\n\n    // Draw node border\n    ctx.strokeStyle = isSelected ? '#ffffff' : 'rgba(255, 255, 255, 0.5)';\n    ctx.lineWidth = 2;\n    ctx.beginPath();\n    ctx.arc(pos.x, pos.y, isSelected ? 25 * pulse : 20, 0, Math.PI * 2);\n    ctx.stroke();\n  };\n  const drawNodeLabel = (ctx, node) => {\n    const pos = nodePositions[node.id];\n    if (!pos) return;\n    ctx.fillStyle = '#ffffff';\n    ctx.font = 'bold 14px Inter';\n    ctx.textAlign = 'center';\n    ctx.fillText(node.id, pos.x, pos.y + 4);\n  };\n  const drawModeIndicator = ctx => {\n    const modeText = {\n      'view': 'View Mode - Click to select',\n      'add-node': 'Add Node Mode - Click to add',\n      'add-link': 'Add Link Mode - Click two nodes',\n      'edit': 'Edit Mode - Drag to move'\n    };\n    ctx.fillStyle = 'rgba(0, 0, 0, 0.7)';\n    ctx.fillRect(10, 10, 250, 30);\n    ctx.fillStyle = '#ffffff';\n    ctx.font = '12px Inter';\n    ctx.textAlign = 'left';\n    ctx.fillText(modeText[mode], 15, 30);\n  };\n  const handleCanvasClick = event => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n    const clickedNode = getNodeAt(x, y);\n    if (mode === 'add-node' && !clickedNode) {\n      addNode(x, y);\n    } else if (mode === 'add-link') {\n      if (clickedNode) {\n        if (!tempLink) {\n          setTempLink({\n            source: clickedNode,\n            x,\n            y\n          });\n        } else if (tempLink.source !== clickedNode) {\n          addLink(tempLink.source, clickedNode);\n          setTempLink(null);\n        }\n      } else {\n        setTempLink(null);\n      }\n    } else if (mode === 'view') {\n      if (clickedNode) {\n        setSelectedNode(selectedNode === clickedNode ? null : clickedNode);\n      } else {\n        setSelectedNode(null);\n        setSelectedLink(null);\n      }\n    }\n  };\n  const handleMouseDown = event => {\n    if (mode !== 'edit') return;\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n    const clickedNode = getNodeAt(x, y);\n    if (clickedNode) {\n      setIsDragging(true);\n      setSelectedNode(clickedNode);\n      const pos = nodePositions[clickedNode];\n      setDragOffset({\n        x: x - pos.x,\n        y: y - pos.y\n      });\n    }\n  };\n  const handleMouseMove = event => {\n    if (!isDragging && mode !== 'add-link') return;\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n    if (isDragging && selectedNode) {\n      setNodePositions(prev => ({\n        ...prev,\n        [selectedNode]: {\n          x: x - dragOffset.x,\n          y: y - dragOffset.y\n        }\n      }));\n    } else if (mode === 'add-link' && tempLink) {\n      setTempLink(prev => ({\n        ...prev,\n        x,\n        y\n      }));\n    }\n  };\n  const handleMouseUp = () => {\n    setIsDragging(false);\n    setDragOffset({\n      x: 0,\n      y: 0\n    });\n  };\n  const getSelectedNodeInfo = () => {\n    if (!selectedNode) return null;\n    return networkData.nodes.find(node => node.id === selectedNode);\n  };\n  const loadSampleNetwork = async () => {\n    try {\n      await axios.post('/api/network/load-sample');\n      fetchNetworkData();\n    } catch (err) {\n      setError('Failed to load sample network');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"network-visualization\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"visualization-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Dynamic Network Topology\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Create and modify network structures in real-time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-actions\",\n        children: [/*#__PURE__*/_jsxDEV(motion.button, {\n          className: `mode-btn ${mode === 'view' ? 'active' : ''}`,\n          onClick: () => {\n            setMode('view');\n            setTempLink(null);\n          },\n          whileHover: {\n            scale: 1.05\n          },\n          whileTap: {\n            scale: 0.95\n          },\n          children: \"View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(motion.button, {\n          className: `mode-btn ${mode === 'add-node' ? 'active' : ''}`,\n          onClick: () => {\n            setMode('add-node');\n            setTempLink(null);\n          },\n          whileHover: {\n            scale: 1.05\n          },\n          whileTap: {\n            scale: 0.95\n          },\n          children: [/*#__PURE__*/_jsxDEV(FiPlus, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 13\n          }, this), \" Node\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(motion.button, {\n          className: `mode-btn ${mode === 'add-link' ? 'active' : ''}`,\n          onClick: () => {\n            setMode('add-link');\n            setTempLink(null);\n          },\n          whileHover: {\n            scale: 1.05\n          },\n          whileTap: {\n            scale: 0.95\n          },\n          children: [/*#__PURE__*/_jsxDEV(FiPlus, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 13\n          }, this), \" Link\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(motion.button, {\n          className: `mode-btn ${mode === 'edit' ? 'active' : ''}`,\n          onClick: () => {\n            setMode('edit');\n            setTempLink(null);\n          },\n          whileHover: {\n            scale: 1.05\n          },\n          whileTap: {\n            scale: 0.95\n          },\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"visualization-controls\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-group\",\n        children: [/*#__PURE__*/_jsxDEV(motion.button, {\n          className: \"control-btn\",\n          onClick: () => setIsAnimating(!isAnimating),\n          whileHover: {\n            scale: 1.05\n          },\n          whileTap: {\n            scale: 0.95\n          },\n          children: [isAnimating ? /*#__PURE__*/_jsxDEV(FiPause, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 28\n          }, this) : /*#__PURE__*/_jsxDEV(FiPlay, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 42\n          }, this), isAnimating ? 'Pause' : 'Play', \" Animation\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(motion.button, {\n          className: \"control-btn\",\n          onClick: fetchNetworkData,\n          disabled: loading,\n          whileHover: {\n            scale: loading ? 1 : 1.05\n          },\n          whileTap: {\n            scale: loading ? 1 : 0.95\n          },\n          children: [/*#__PURE__*/_jsxDEV(FiRefreshCw, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 13\n          }, this), \" Refresh\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(motion.button, {\n          className: \"control-btn primary\",\n          onClick: saveNetwork,\n          disabled: loading,\n          whileHover: {\n            scale: loading ? 1 : 1.05\n          },\n          whileTap: {\n            scale: loading ? 1 : 0.95\n          },\n          children: [/*#__PURE__*/_jsxDEV(FiSave, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 13\n          }, this), \" Save Network\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(motion.button, {\n          className: \"control-btn\",\n          onClick: loadSampleNetwork,\n          whileHover: {\n            scale: 1.05\n          },\n          whileTap: {\n            scale: 0.95\n          },\n          children: [/*#__PURE__*/_jsxDEV(FiUpload, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 13\n          }, this), \" Load Sample\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"error-message\",\n      initial: {\n        opacity: 0,\n        y: -10\n      },\n      animate: {\n        opacity: 1,\n        y: 0\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 542,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"visualization-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        className: \"network-canvas\",\n        width: canvasSize.width,\n        height: canvasSize.height,\n        onClick: handleCanvasClick,\n        onMouseDown: handleMouseDown,\n        onMouseMove: handleMouseMove,\n        onMouseUp: handleMouseUp,\n        onMouseLeave: handleMouseUp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 9\n      }, this), selectedNode && /*#__PURE__*/_jsxDEV(motion.div, {\n        className: \"node-info-panel\",\n        initial: {\n          opacity: 0,\n          x: 20\n        },\n        animate: {\n          opacity: 1,\n          x: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Node \", selectedNode]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"node-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"ID:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 572,\n              columnNumber: 18\n            }, this), \" \", selectedNode]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 572,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Connections:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 573,\n              columnNumber: 18\n            }, this), \" \", networkData.links.filter(l => l.source === selectedNode || l.target === selectedNode).length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 573,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Position:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 576,\n              columnNumber: 18\n            }, this), \" (\", Math.round(((_nodePositions$select = nodePositions[selectedNode]) === null || _nodePositions$select === void 0 ? void 0 : _nodePositions$select.x) || 0), \", \", Math.round(((_nodePositions$select2 = nodePositions[selectedNode]) === null || _nodePositions$select2 === void 0 ? void 0 : _nodePositions$select2.y) || 0), \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 576,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"node-actions\",\n          children: /*#__PURE__*/_jsxDEV(motion.button, {\n            className: \"action-btn danger small\",\n            onClick: () => removeNode(selectedNode),\n            whileHover: {\n              scale: 1.05\n            },\n            whileTap: {\n              scale: 0.95\n            },\n            children: [/*#__PURE__*/_jsxDEV(FiMinus, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 585,\n              columnNumber: 17\n            }, this), \" Remove Node\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 579,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"network-stats\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-label\",\n          children: \"Nodes:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-value\",\n          children: networkData.nodes.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-label\",\n          children: \"Links:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-value\",\n          children: networkData.links.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 597,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-label\",\n          children: \"Mode:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-value\",\n          children: mode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 456,\n    columnNumber: 5\n  }, this);\n};\n_s(NetworkVisualization, \"U2lpfQ7zPh0zRCVWqtBRoAU+iiU=\");\n_c = NetworkVisualization;\nexport default NetworkVisualization;\nvar _c;\n$RefreshReg$(_c, \"NetworkVisualization\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","motion","FiRefreshCw","FiPlay","FiPause","FiSettings","FiPlus","FiMinus","FiSave","FiUpload","axios","jsxDEV","_jsxDEV","NetworkVisualization","_s","_nodePositions$select","_nodePositions$select2","canvasRef","networkData","setNetworkData","nodes","links","selectedNode","setSelectedNode","selectedLink","setSelectedLink","isAnimating","setIsAnimating","loading","setLoading","error","setError","isDragging","setIsDragging","dragOffset","setDragOffset","x","y","mode","setMode","tempLink","setTempLink","nodePositions","setNodePositions","canvasSize","setCanvasSize","width","height","showControls","setShowControls","nextNodeId","setNextNodeId","fetchNetworkData","updateCanvasSize","window","addEventListener","removeEventListener","length","drawNetwork","_canvasRef$current","container","current","parentElement","clientWidth","Math","max","clientHeight","response","get","data","success","positions","forEach","node","index","id","floor","prev","maxId","map","n","isNaN","parseInt","err","console","saveNetwork","post","addNode","nodeId","toString","newNode","label","neighbors","removeNode","filter","l","source","target","newPos","addLink","sourceId","targetId","distance","linkExists","some","newLink","removeLink","getNodeAt","pos","dx","dy","sqrt","canvas","ctx","getContext","fillStyle","fillRect","drawGrid","link","drawLink","drawTempLink","drawNode","drawNodeLabel","drawModeIndicator","strokeStyle","lineWidth","beginPath","moveTo","lineTo","stroke","sourcePos","targetPos","isSelected","midX","midY","font","textAlign","fillText","drawDataFlow","setLineDash","time","Date","now","progress","sin","shadowColor","shadowBlur","arc","PI","fill","pulse","modeText","handleCanvasClick","event","rect","getBoundingClientRect","clientX","left","clientY","top","clickedNode","handleMouseDown","handleMouseMove","handleMouseUp","getSelectedNodeInfo","find","loadSampleNetwork","className","children","fileName","_jsxFileName","lineNumber","columnNumber","button","onClick","whileHover","scale","whileTap","disabled","div","initial","opacity","animate","ref","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","round","_c","$RefreshReg$"],"sources":["/Users/ayushratan/Desktop/projects/dcnn/Advanced-Protocol-Analysis-Security-Dashboard/frontend/src/components/NetworkVisualization.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { motion } from 'framer-motion';\nimport { FiRefreshCw, FiPlay, FiPause, FiSettings, FiPlus, FiMinus, FiSave, FiUpload } from 'react-icons/fi';\nimport axios from 'axios';\nimport './NetworkVisualization.css';\n\nconst NetworkVisualization = () => {\n  const canvasRef = useRef(null);\n  const [networkData, setNetworkData] = useState({ nodes: [], links: [] });\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [selectedLink, setSelectedLink] = useState(null);\n  const [isAnimating, setIsAnimating] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [dragOffset, setDragOffset] = useState({ x: 0, y: 0 });\n  const [mode, setMode] = useState('view'); // 'view', 'add-node', 'add-link', 'edit'\n  const [tempLink, setTempLink] = useState(null);\n  const [nodePositions, setNodePositions] = useState({});\n  const [canvasSize, setCanvasSize] = useState({ width: 800, height: 600 });\n  const [showControls, setShowControls] = useState(true);\n\n  // Dynamic node ID generator\n  const [nextNodeId, setNextNodeId] = useState(1);\n\n  useEffect(() => {\n    fetchNetworkData();\n    updateCanvasSize();\n    window.addEventListener('resize', updateCanvasSize);\n    return () => window.removeEventListener('resize', updateCanvasSize);\n  }, []);\n\n  useEffect(() => {\n    if (networkData.nodes.length > 0) {\n      drawNetwork();\n    }\n  }, [networkData, selectedNode, selectedLink, isAnimating, tempLink, nodePositions]);\n\n  const updateCanvasSize = () => {\n    const container = canvasRef.current?.parentElement;\n    if (container) {\n      setCanvasSize({\n        width: container.clientWidth,\n        height: Math.max(600, container.clientHeight - 100)\n      });\n    }\n  };\n\n  const fetchNetworkData = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get('/api/network/topology');\n      if (response.data.success) {\n        setNetworkData(response.data);\n        // Initialize positions if not set\n        const positions = {};\n        response.data.nodes.forEach((node, index) => {\n          if (!nodePositions[node.id]) {\n            positions[node.id] = {\n              x: 150 + (index % 4) * 150,\n              y: 150 + Math.floor(index / 4) * 150\n            };\n          }\n        });\n        setNodePositions(prev => ({ ...prev, ...positions }));\n        \n        // Update next node ID\n        const maxId = Math.max(0, ...response.data.nodes.map(n => \n          isNaN(parseInt(n.id)) ? 0 : parseInt(n.id)\n        ));\n        setNextNodeId(maxId + 1);\n      } else {\n        setError('Failed to fetch network data');\n      }\n    } catch (err) {\n      setError('Error connecting to API');\n      console.error('Network fetch error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const saveNetwork = async () => {\n    try {\n      setLoading(true);\n      await axios.post('/api/network/save', {\n        nodes: networkData.nodes,\n        links: networkData.links,\n        positions: nodePositions\n      });\n      setError(null);\n    } catch (err) {\n      setError('Failed to save network');\n      console.error('Save error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const addNode = (x, y) => {\n    const nodeId = nextNodeId.toString();\n    const newNode = {\n      id: nodeId,\n      label: `Node ${nodeId}`,\n      neighbors: []\n    };\n    \n    setNetworkData(prev => ({\n      ...prev,\n      nodes: [...prev.nodes, newNode]\n    }));\n    \n    setNodePositions(prev => ({\n      ...prev,\n      [nodeId]: { x, y }\n    }));\n    \n    setNextNodeId(prev => prev + 1);\n  };\n\n  const removeNode = (nodeId) => {\n    setNetworkData(prev => ({\n      nodes: prev.nodes.filter(n => n.id !== nodeId),\n      links: prev.links.filter(l => l.source !== nodeId && l.target !== nodeId)\n    }));\n    \n    setNodePositions(prev => {\n      const newPos = { ...prev };\n      delete newPos[nodeId];\n      return newPos;\n    });\n    \n    if (selectedNode === nodeId) setSelectedNode(null);\n  };\n\n  const addLink = (sourceId, targetId, distance = 1) => {\n    // Check if link already exists\n    const linkExists = networkData.links.some(l => \n      (l.source === sourceId && l.target === targetId) ||\n      (l.source === targetId && l.target === sourceId)\n    );\n    \n    if (!linkExists && sourceId !== targetId) {\n      const newLink = {\n        source: sourceId,\n        target: targetId,\n        distance: distance\n      };\n      \n      setNetworkData(prev => ({\n        ...prev,\n        links: [...prev.links, newLink]\n      }));\n    }\n  };\n\n  const removeLink = (sourceId, targetId) => {\n    setNetworkData(prev => ({\n      ...prev,\n      links: prev.links.filter(l => \n        !((l.source === sourceId && l.target === targetId) ||\n          (l.source === targetId && l.target === sourceId))\n      )\n    }));\n  };\n\n  const getNodeAt = (x, y) => {\n    for (const node of networkData.nodes) {\n      const pos = nodePositions[node.id];\n      if (pos) {\n        const dx = x - pos.x;\n        const dy = y - pos.y;\n        if (Math.sqrt(dx * dx + dy * dy) <= 25) {\n          return node.id;\n        }\n      }\n    }\n    return null;\n  };\n\n  const drawNetwork = () => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    canvas.width = canvasSize.width;\n    canvas.height = canvasSize.height;\n\n    // Clear canvas\n    ctx.fillStyle = 'rgba(10, 10, 15, 0.95)';\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n    // Draw grid\n    drawGrid(ctx, canvas.width, canvas.height);\n\n    // Draw links\n    networkData.links.forEach(link => {\n      drawLink(ctx, link);\n    });\n\n    // Draw temporary link\n    if (tempLink) {\n      drawTempLink(ctx, tempLink);\n    }\n\n    // Draw nodes\n    networkData.nodes.forEach(node => {\n      drawNode(ctx, node);\n    });\n\n    // Draw node labels\n    networkData.nodes.forEach(node => {\n      drawNodeLabel(ctx, node);\n    });\n\n    // Draw mode indicator\n    drawModeIndicator(ctx);\n  };\n\n  const drawGrid = (ctx, width, height) => {\n    ctx.strokeStyle = 'rgba(0, 212, 255, 0.05)';\n    ctx.lineWidth = 1;\n    \n    for (let x = 0; x < width; x += 30) {\n      ctx.beginPath();\n      ctx.moveTo(x, 0);\n      ctx.lineTo(x, height);\n      ctx.stroke();\n    }\n    \n    for (let y = 0; y < height; y += 30) {\n      ctx.beginPath();\n      ctx.moveTo(0, y);\n      ctx.lineTo(width, y);\n      ctx.stroke();\n    }\n  };\n\n  const drawLink = (ctx, link) => {\n    const sourcePos = nodePositions[link.source];\n    const targetPos = nodePositions[link.target];\n    \n    if (!sourcePos || !targetPos) return;\n\n    const isSelected = selectedLink === `${link.source}-${link.target}` || \n                      selectedLink === `${link.target}-${link.source}`;\n    \n    ctx.strokeStyle = isSelected ? '#ff6b6b' : \n                     (selectedNode === link.source || selectedNode === link.target) \n                     ? '#00d4ff' : 'rgba(0, 212, 255, 0.4)';\n    ctx.lineWidth = isSelected ? 4 : (selectedNode === link.source || selectedNode === link.target) ? 3 : 2;\n    \n    ctx.beginPath();\n    ctx.moveTo(sourcePos.x, sourcePos.y);\n    ctx.lineTo(targetPos.x, targetPos.y);\n    ctx.stroke();\n\n    // Draw distance label\n    const midX = (sourcePos.x + targetPos.x) / 2;\n    const midY = (sourcePos.y + targetPos.y) / 2;\n    \n    ctx.fillStyle = isSelected ? '#ff6b6b' : '#ffe66d';\n    ctx.font = '12px Inter';\n    ctx.textAlign = 'center';\n    ctx.fillText(link.distance.toString(), midX, midY - 5);\n\n    // Draw data flow animation\n    if (isAnimating) {\n      drawDataFlow(ctx, sourcePos, targetPos);\n    }\n  };\n\n  const drawTempLink = (ctx, tempLink) => {\n    const sourcePos = nodePositions[tempLink.source];\n    if (!sourcePos) return;\n\n    ctx.strokeStyle = 'rgba(255, 255, 255, 0.6)';\n    ctx.lineWidth = 2;\n    ctx.setLineDash([5, 5]);\n    \n    ctx.beginPath();\n    ctx.moveTo(sourcePos.x, sourcePos.y);\n    ctx.lineTo(tempLink.x, tempLink.y);\n    ctx.stroke();\n    \n    ctx.setLineDash([]);\n  };\n\n  const drawDataFlow = (ctx, source, target) => {\n    const time = Date.now() * 0.003;\n    const progress = (Math.sin(time) + 1) / 2;\n    \n    const x = source.x + (target.x - source.x) * progress;\n    const y = source.y + (target.y - source.y) * progress;\n    \n    ctx.fillStyle = '#4ecdc4';\n    ctx.shadowColor = '#4ecdc4';\n    ctx.shadowBlur = 10;\n    ctx.beginPath();\n    ctx.arc(x, y, 3, 0, Math.PI * 2);\n    ctx.fill();\n    ctx.shadowBlur = 0;\n  };\n\n  const drawNode = (ctx, node) => {\n    const pos = nodePositions[node.id];\n    if (!pos) return;\n\n    const isSelected = selectedNode === node.id;\n    const time = Date.now() * 0.002;\n    const pulse = Math.sin(time) * 0.1 + 1;\n\n    // Draw node glow\n    if (isSelected || isAnimating) {\n      ctx.shadowColor = isSelected ? '#00d4ff' : '#ff6b6b';\n      ctx.shadowBlur = 20 * pulse;\n    }\n\n    // Draw main node\n    ctx.fillStyle = isSelected ? '#00d4ff' : '#ff6b6b';\n    ctx.beginPath();\n    ctx.arc(pos.x, pos.y, isSelected ? 25 * pulse : 20, 0, Math.PI * 2);\n    ctx.fill();\n    ctx.shadowBlur = 0;\n\n    // Draw inner circle\n    ctx.fillStyle = isSelected ? 'rgba(255, 255, 255, 0.9)' : 'rgba(255, 255, 255, 0.7)';\n    ctx.beginPath();\n    ctx.arc(pos.x, pos.y, isSelected ? 15 : 12, 0, Math.PI * 2);\n    ctx.fill();\n\n    // Draw node border\n    ctx.strokeStyle = isSelected ? '#ffffff' : 'rgba(255, 255, 255, 0.5)';\n    ctx.lineWidth = 2;\n    ctx.beginPath();\n    ctx.arc(pos.x, pos.y, isSelected ? 25 * pulse : 20, 0, Math.PI * 2);\n    ctx.stroke();\n  };\n\n  const drawNodeLabel = (ctx, node) => {\n    const pos = nodePositions[node.id];\n    if (!pos) return;\n\n    ctx.fillStyle = '#ffffff';\n    ctx.font = 'bold 14px Inter';\n    ctx.textAlign = 'center';\n    ctx.fillText(node.id, pos.x, pos.y + 4);\n  };\n\n  const drawModeIndicator = (ctx) => {\n    const modeText = {\n      'view': 'View Mode - Click to select',\n      'add-node': 'Add Node Mode - Click to add',\n      'add-link': 'Add Link Mode - Click two nodes',\n      'edit': 'Edit Mode - Drag to move'\n    };\n\n    ctx.fillStyle = 'rgba(0, 0, 0, 0.7)';\n    ctx.fillRect(10, 10, 250, 30);\n    \n    ctx.fillStyle = '#ffffff';\n    ctx.font = '12px Inter';\n    ctx.textAlign = 'left';\n    ctx.fillText(modeText[mode], 15, 30);\n  };\n\n  const handleCanvasClick = (event) => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n    \n    const clickedNode = getNodeAt(x, y);\n\n    if (mode === 'add-node' && !clickedNode) {\n      addNode(x, y);\n    } else if (mode === 'add-link') {\n      if (clickedNode) {\n        if (!tempLink) {\n          setTempLink({ source: clickedNode, x, y });\n        } else if (tempLink.source !== clickedNode) {\n          addLink(tempLink.source, clickedNode);\n          setTempLink(null);\n        }\n      } else {\n        setTempLink(null);\n      }\n    } else if (mode === 'view') {\n      if (clickedNode) {\n        setSelectedNode(selectedNode === clickedNode ? null : clickedNode);\n      } else {\n        setSelectedNode(null);\n        setSelectedLink(null);\n      }\n    }\n  };\n\n  const handleMouseDown = (event) => {\n    if (mode !== 'edit') return;\n    \n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n    \n    const clickedNode = getNodeAt(x, y);\n    if (clickedNode) {\n      setIsDragging(true);\n      setSelectedNode(clickedNode);\n      const pos = nodePositions[clickedNode];\n      setDragOffset({ x: x - pos.x, y: y - pos.y });\n    }\n  };\n\n  const handleMouseMove = (event) => {\n    if (!isDragging && mode !== 'add-link') return;\n    \n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n    \n    if (isDragging && selectedNode) {\n      setNodePositions(prev => ({\n        ...prev,\n        [selectedNode]: {\n          x: x - dragOffset.x,\n          y: y - dragOffset.y\n        }\n      }));\n    } else if (mode === 'add-link' && tempLink) {\n      setTempLink(prev => ({ ...prev, x, y }));\n    }\n  };\n\n  const handleMouseUp = () => {\n    setIsDragging(false);\n    setDragOffset({ x: 0, y: 0 });\n  };\n\n  const getSelectedNodeInfo = () => {\n    if (!selectedNode) return null;\n    return networkData.nodes.find(node => node.id === selectedNode);\n  };\n\n  const loadSampleNetwork = async () => {\n    try {\n      await axios.post('/api/network/load-sample');\n      fetchNetworkData();\n    } catch (err) {\n      setError('Failed to load sample network');\n    }\n  };\n\n  return (\n    <div className=\"network-visualization\">\n      <div className=\"visualization-header\">\n        <div className=\"header-content\">\n          <h2>Dynamic Network Topology</h2>\n          <p>Create and modify network structures in real-time</p>\n        </div>\n        <div className=\"header-actions\">\n          <motion.button\n            className={`mode-btn ${mode === 'view' ? 'active' : ''}`}\n            onClick={() => { setMode('view'); setTempLink(null); }}\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n          >\n            View\n          </motion.button>\n          <motion.button\n            className={`mode-btn ${mode === 'add-node' ? 'active' : ''}`}\n            onClick={() => { setMode('add-node'); setTempLink(null); }}\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n          >\n            <FiPlus /> Node\n          </motion.button>\n          <motion.button\n            className={`mode-btn ${mode === 'add-link' ? 'active' : ''}`}\n            onClick={() => { setMode('add-link'); setTempLink(null); }}\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n          >\n            <FiPlus /> Link\n          </motion.button>\n          <motion.button\n            className={`mode-btn ${mode === 'edit' ? 'active' : ''}`}\n            onClick={() => { setMode('edit'); setTempLink(null); }}\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n          >\n            Edit\n          </motion.button>\n        </div>\n      </div>\n\n      <div className=\"visualization-controls\">\n        <div className=\"control-group\">\n          <motion.button\n            className=\"control-btn\"\n            onClick={() => setIsAnimating(!isAnimating)}\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n          >\n            {isAnimating ? <FiPause /> : <FiPlay />}\n            {isAnimating ? 'Pause' : 'Play'} Animation\n          </motion.button>\n          \n          <motion.button\n            className=\"control-btn\"\n            onClick={fetchNetworkData}\n            disabled={loading}\n            whileHover={{ scale: loading ? 1 : 1.05 }}\n            whileTap={{ scale: loading ? 1 : 0.95 }}\n          >\n            <FiRefreshCw /> Refresh\n          </motion.button>\n          \n          <motion.button\n            className=\"control-btn primary\"\n            onClick={saveNetwork}\n            disabled={loading}\n            whileHover={{ scale: loading ? 1 : 1.05 }}\n            whileTap={{ scale: loading ? 1 : 0.95 }}\n          >\n            <FiSave /> Save Network\n          </motion.button>\n          \n          <motion.button\n            className=\"control-btn\"\n            onClick={loadSampleNetwork}\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n          >\n            <FiUpload /> Load Sample\n          </motion.button>\n        </div>\n      </div>\n\n      {error && (\n        <motion.div \n          className=\"error-message\"\n          initial={{ opacity: 0, y: -10 }}\n          animate={{ opacity: 1, y: 0 }}\n        >\n          {error}\n        </motion.div>\n      )}\n\n      <div className=\"visualization-container\">\n        <canvas\n          ref={canvasRef}\n          className=\"network-canvas\"\n          width={canvasSize.width}\n          height={canvasSize.height}\n          onClick={handleCanvasClick}\n          onMouseDown={handleMouseDown}\n          onMouseMove={handleMouseMove}\n          onMouseUp={handleMouseUp}\n          onMouseLeave={handleMouseUp}\n        />\n\n        {selectedNode && (\n          <motion.div \n            className=\"node-info-panel\"\n            initial={{ opacity: 0, x: 20 }}\n            animate={{ opacity: 1, x: 0 }}\n          >\n            <h3>Node {selectedNode}</h3>\n            <div className=\"node-details\">\n              <p><strong>ID:</strong> {selectedNode}</p>\n              <p><strong>Connections:</strong> {networkData.links.filter(l => \n                l.source === selectedNode || l.target === selectedNode\n              ).length}</p>\n              <p><strong>Position:</strong> ({Math.round(nodePositions[selectedNode]?.x || 0)}, {Math.round(nodePositions[selectedNode]?.y || 0)})</p>\n            </div>\n            <div className=\"node-actions\">\n              <motion.button\n                className=\"action-btn danger small\"\n                onClick={() => removeNode(selectedNode)}\n                whileHover={{ scale: 1.05 }}\n                whileTap={{ scale: 0.95 }}\n              >\n                <FiMinus /> Remove Node\n              </motion.button>\n            </div>\n          </motion.div>\n        )}\n      </div>\n\n      <div className=\"network-stats\">\n        <div className=\"stat-item\">\n          <span className=\"stat-label\">Nodes:</span>\n          <span className=\"stat-value\">{networkData.nodes.length}</span>\n        </div>\n        <div className=\"stat-item\">\n          <span className=\"stat-label\">Links:</span>\n          <span className=\"stat-value\">{networkData.links.length}</span>\n        </div>\n        <div className=\"stat-item\">\n          <span className=\"stat-label\">Mode:</span>\n          <span className=\"stat-value\">{mode}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NetworkVisualization;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}