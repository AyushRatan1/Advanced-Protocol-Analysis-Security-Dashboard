{"ast":null,"code":"var _jsxFileName = \"/Users/ayushratan/Desktop/projects/dcnn/Advanced-Protocol-Analysis-Security-Dashboard/frontend/src/components/tabs/RIPTab.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { FiTarget, FiRefreshCw, FiMapPin, FiPlay, FiActivity, FiNavigation, FiGrid } from 'react-icons/fi';\nimport axios from 'axios';\nimport predefinedTopologies from '../../topologies';\nimport './RIPTab.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RIPTab = () => {\n  _s();\n  var _networkData$nodes6;\n  const [networkData, setNetworkData] = useState({\n    nodes: [],\n    links: []\n  });\n  const [sourceNode, setSourceNode] = useState('');\n  const [destNode, setDestNode] = useState('');\n  const [shortestPath, setShortestPath] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [selectedTopology, setSelectedTopology] = useState('linear');\n  useEffect(() => {\n    fetchNetworkData();\n  }, []);\n  useEffect(() => {\n    var _networkData$nodes, _networkData$nodes2;\n    // Set default source and destination when network data changes\n    if ((networkData === null || networkData === void 0 ? void 0 : (_networkData$nodes = networkData.nodes) === null || _networkData$nodes === void 0 ? void 0 : _networkData$nodes.length) > 0 && !sourceNode) {\n      setSourceNode(networkData.nodes[0].id);\n    }\n    if ((networkData === null || networkData === void 0 ? void 0 : (_networkData$nodes2 = networkData.nodes) === null || _networkData$nodes2 === void 0 ? void 0 : _networkData$nodes2.length) > 1 && !destNode) {\n      setDestNode(networkData.nodes[networkData.nodes.length - 1].id);\n    }\n  }, [networkData, sourceNode, destNode]);\n  const fetchNetworkData = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get('/api/network/topology');\n      if (response.data.success) {\n        setNetworkData(response.data);\n        setError('');\n      } else {\n        setError('Failed to fetch network data');\n      }\n    } catch (err) {\n      setError('Error connecting to API');\n      console.error('Network fetch error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const findShortestPath = async () => {\n    if (!sourceNode || !destNode) {\n      setError('Please select both source and destination nodes');\n      return;\n    }\n    if (sourceNode === destNode) {\n      setError('Source and destination cannot be the same');\n      return;\n    }\n    setLoading(true);\n    setError('');\n    try {\n      const response = await axios.post('/api/rip/shortest-path', {\n        source: sourceNode,\n        destination: destNode\n      });\n      if (response.data.success) {\n        setShortestPath(response.data);\n        setError('');\n      } else {\n        setError(response.data.error || 'Failed to find path');\n      }\n    } catch (err) {\n      setError('Error connecting to API');\n      console.error('Path finding error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const getNodeInfo = nodeId => {\n    return networkData.nodes.find(node => node.id === nodeId);\n  };\n  const getAvailableNodes = () => {\n    var _networkData$nodes3;\n    return (networkData === null || networkData === void 0 ? void 0 : (_networkData$nodes3 = networkData.nodes) === null || _networkData$nodes3 === void 0 ? void 0 : _networkData$nodes3.map(node => node.id).sort()) || [];\n  };\n  const calculateNetworkStats = () => {\n    var _networkData$nodes4, _networkData$links, _networkData$links2;\n    const totalNodes = (networkData === null || networkData === void 0 ? void 0 : (_networkData$nodes4 = networkData.nodes) === null || _networkData$nodes4 === void 0 ? void 0 : _networkData$nodes4.length) || 0;\n    const totalLinks = (networkData === null || networkData === void 0 ? void 0 : (_networkData$links = networkData.links) === null || _networkData$links === void 0 ? void 0 : _networkData$links.length) || 0;\n    const avgDegree = totalNodes > 0 ? totalLinks * 2 / totalNodes : 0;\n    const maxDistance = (networkData === null || networkData === void 0 ? void 0 : (_networkData$links2 = networkData.links) === null || _networkData$links2 === void 0 ? void 0 : _networkData$links2.length) > 0 ? Math.max(...networkData.links.map(l => l.distance || l.cost || 0)) : 0;\n    return {\n      totalNodes,\n      totalLinks,\n      avgDegree: avgDegree.toFixed(1),\n      maxDistance\n    };\n  };\n\n  // When dropdown changes, load topology and refresh\n  const handleTopologyChange = async e => {\n    const topoKey = e.target.value;\n    setSelectedTopology(topoKey);\n    if (predefinedTopologies[topoKey]) {\n      const data = predefinedTopologies[topoKey];\n      const payload = {\n        topology: topoKey,\n        data: {\n          nodes: data.nodes,\n          links: data.links\n        }\n      };\n      try {\n        await axios.post('/api/network/load-topology', payload);\n        await fetchNetworkData();\n      } catch (err) {\n        console.error('Error loading topology:', err);\n      }\n    }\n  };\n\n  // Simple network render (SVG similar to overview)\n  const renderNetwork = () => {\n    var _networkData$nodes5;\n    if (!(networkData !== null && networkData !== void 0 && (_networkData$nodes5 = networkData.nodes) !== null && _networkData$nodes5 !== void 0 && _networkData$nodes5.length)) return null;\n    const svgWidth = 800;\n    const svgHeight = 400;\n    return /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: svgWidth,\n      height: svgHeight,\n      className: \"network-svg\",\n      children: [networkData.links.map((link, idx) => {\n        var _ref, _link$cost;\n        const src = networkData.nodes.find(n => n.id === link.source);\n        const dst = networkData.nodes.find(n => n.id === link.target);\n        if (!src || !dst) return null;\n        return /*#__PURE__*/_jsxDEV(\"g\", {\n          children: [/*#__PURE__*/_jsxDEV(\"line\", {\n            x1: src.x,\n            y1: src.y,\n            x2: dst.x,\n            y2: dst.y,\n            stroke: \"#00d4ff\",\n            strokeWidth: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n            x: (src.x + dst.x) / 2,\n            y: (src.y + dst.y) / 2 - 8,\n            fill: \"#ffe66d\",\n            fontSize: \"12\",\n            fontWeight: \"600\",\n            textAnchor: \"middle\",\n            children: (_ref = (_link$cost = link.cost) !== null && _link$cost !== void 0 ? _link$cost : link.distance) !== null && _ref !== void 0 ? _ref : 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this)]\n        }, `link-${idx}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this);\n      }), networkData.nodes.map(node => /*#__PURE__*/_jsxDEV(\"g\", {\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: node.x,\n          cy: node.y,\n          r: \"20\",\n          fill: \"url(#gradNode)\",\n          stroke: \"#00d4ff\",\n          strokeWidth: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: node.x,\n          y: node.y + 5,\n          fill: \"#ffffff\",\n          fontSize: \"14\",\n          fontWeight: \"700\",\n          textAnchor: \"middle\",\n          children: node.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this)]\n      }, node.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"defs\", {\n        children: /*#__PURE__*/_jsxDEV(\"radialGradient\", {\n          id: \"gradNode\",\n          cx: \"30%\",\n          cy: \"30%\",\n          children: [/*#__PURE__*/_jsxDEV(\"stop\", {\n            offset: \"0%\",\n            stopColor: \"rgba(0, 212, 255, 0.3)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"stop\", {\n            offset: \"100%\",\n            stopColor: \"rgba(0, 150, 180, 0.8)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this);\n  };\n  if (loading && (!(networkData !== null && networkData !== void 0 && networkData.nodes) || networkData.nodes.length === 0)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rip-tab\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-container\",\n        children: [/*#__PURE__*/_jsxDEV(motion.div, {\n          animate: {\n            rotate: 360\n          },\n          transition: {\n            duration: 1,\n            repeat: Infinity,\n            ease: \"linear\"\n          },\n          className: \"loading-spinner\",\n          children: /*#__PURE__*/_jsxDEV(FiRefreshCw, {\n            size: 40\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading network data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this);\n  }\n  const availableNodes = getAvailableNodes();\n  const stats = calculateNetworkStats();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"rip-tab\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"RIP Routing Protocol\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Routing Information Protocol - Distance Vector Algorithm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedTopology,\n          onChange: handleTopologyChange,\n          className: \"cyber-select\",\n          children: Object.entries(predefinedTopologies).map(([key, topo]) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: key,\n            children: topo.name\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(motion.button, {\n          className: \"action-btn secondary\",\n          onClick: fetchNetworkData,\n          disabled: loading,\n          whileHover: {\n            scale: loading ? 1 : 1.05\n          },\n          whileTap: {\n            scale: loading ? 1 : 0.95\n          },\n          children: [/*#__PURE__*/_jsxDEV(FiRefreshCw, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), \" Refresh Network\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"error-message\",\n      initial: {\n        opacity: 0,\n        y: -10\n      },\n      animate: {\n        opacity: 1,\n        y: 0\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rip-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"network-stats-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [/*#__PURE__*/_jsxDEV(FiActivity, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this), \" Network Statistics\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stats-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-value\",\n              children: stats.totalNodes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-label\",\n              children: \"Total Nodes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-value\",\n              children: stats.totalLinks\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-label\",\n              children: \"Total Links\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-value\",\n              children: stats.avgDegree\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-label\",\n              children: \"Avg Degree\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-value\",\n              children: stats.maxDistance\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-label\",\n              children: \"Max Distance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), availableNodes.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-network\",\n        children: [/*#__PURE__*/_jsxDEV(FiNavigation, {\n          size: 48\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"No Network Topology Found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please create a network in the Network Overview tab first.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(motion.button, {\n          className: \"action-btn primary\",\n          onClick: fetchNetworkData,\n          whileHover: {\n            scale: 1.05\n          },\n          whileTap: {\n            scale: 0.95\n          },\n          children: [/*#__PURE__*/_jsxDEV(FiRefreshCw, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 15\n          }, this), \" Retry\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"routing-section\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"path-finder\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [/*#__PURE__*/_jsxDEV(FiNavigation, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 21\n              }, this), \" Find Shortest Path\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"path-controls\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"node-selector\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [/*#__PURE__*/_jsxDEV(FiMapPin, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 271,\n                    columnNumber: 23\n                  }, this), \" Source Node\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  value: sourceNode,\n                  onChange: e => setSourceNode(e.target.value),\n                  className: \"cyber-select\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Select Source\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 278,\n                    columnNumber: 23\n                  }, this), availableNodes.map(node => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: node,\n                    children: [\"Node \", node]\n                  }, node, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 280,\n                    columnNumber: 25\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"path-arrow\",\n                children: /*#__PURE__*/_jsxDEV(FiTarget, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"node-selector\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [/*#__PURE__*/_jsxDEV(FiTarget, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 23\n                  }, this), \" Destination Node\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  value: destNode,\n                  onChange: e => setDestNode(e.target.value),\n                  className: \"cyber-select\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Select Destination\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 298,\n                    columnNumber: 23\n                  }, this), availableNodes.map(node => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: node,\n                    children: [\"Node \", node]\n                  }, node, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 300,\n                    columnNumber: 25\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(motion.button, {\n                className: \"action-btn primary\",\n                onClick: findShortestPath,\n                disabled: loading || !sourceNode || !destNode,\n                whileHover: {\n                  scale: loading || !sourceNode || !destNode ? 1 : 1.05\n                },\n                whileTap: {\n                  scale: loading || !sourceNode || !destNode ? 1 : 0.95\n                },\n                children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(motion.div, {\n                    animate: {\n                      rotate: 360\n                    },\n                    transition: {\n                      duration: 1,\n                      repeat: Infinity,\n                      ease: \"linear\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(FiRefreshCw, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 318,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 314,\n                    columnNumber: 25\n                  }, this), \"Finding...\"]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(FiPlay, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 324,\n                    columnNumber: 25\n                  }, this), \" Find Path\"]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 17\n            }, this), shortestPath && /*#__PURE__*/_jsxDEV(motion.div, {\n              className: \"path-result\",\n              initial: {\n                opacity: 0,\n                y: 20\n              },\n              animate: {\n                opacity: 1,\n                y: 0\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"result-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Shortest Path Found\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"path-stats\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"stat\",\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Hops:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 340,\n                      columnNumber: 27\n                    }, this), \" \", shortestPath.path ? shortestPath.path.length - 1 : 0]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 339,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"stat\",\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Total Cost:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 343,\n                      columnNumber: 27\n                    }, this), \" \", shortestPath.cost]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 342,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 338,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"path-visualization\",\n                children: shortestPath.path && shortestPath.path.map((node, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(motion.div, {\n                    className: \"path-node\",\n                    initial: {\n                      scale: 0\n                    },\n                    animate: {\n                      scale: 1\n                    },\n                    transition: {\n                      delay: index * 0.1\n                    },\n                    children: node\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 350,\n                    columnNumber: 27\n                  }, this), index < shortestPath.path.length - 1 && /*#__PURE__*/_jsxDEV(motion.div, {\n                    className: \"path-arrow-viz\",\n                    initial: {\n                      opacity: 0\n                    },\n                    animate: {\n                      opacity: 1\n                    },\n                    transition: {\n                      delay: (index + 0.5) * 0.1\n                    },\n                    children: \"\\u2192\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 359,\n                    columnNumber: 29\n                  }, this)]\n                }, node, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 349,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"routing-tables-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Routing Tables\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tables-grid\",\n            children: networkData === null || networkData === void 0 ? void 0 : (_networkData$nodes6 = networkData.nodes) === null || _networkData$nodes6 === void 0 ? void 0 : _networkData$nodes6.map((node, idx) => /*#__PURE__*/_jsxDEV(motion.div, {\n              className: `routing-table-card ${selectedNode === node.id ? 'selected' : ''}`,\n              onClick: () => setSelectedNode(selectedNode === node.id ? null : node.id),\n              whileHover: {\n                scale: 1.02\n              },\n              initial: {\n                opacity: 0,\n                y: 20\n              },\n              animate: {\n                opacity: 1,\n                y: 0\n              },\n              transition: {\n                delay: idx * 0.1\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"table-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: [\"Node \", node.id]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 391,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"node-connections\",\n                  children: [node.neighbors ? node.neighbors.length : node.connections ? node.connections.length : 0, \" connections\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 392,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"routing-table\",\n                children: /*#__PURE__*/_jsxDEV(\"table\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Destination\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 400,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Next Hop\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 401,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Distance\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 402,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 399,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 398,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                    children: Object.entries(node.routing_table || {}).map(([dest, info]) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                      className: dest === node.id ? 'self-route' : '',\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        className: \"dest-cell\",\n                        children: dest\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 408,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        className: \"hop-cell\",\n                        children: info.next_hop || '-'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 409,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        className: \"distance-cell\",\n                        children: info.distance === -1 ? '∞' : info.distance\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 410,\n                        columnNumber: 31\n                      }, this)]\n                    }, dest, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 407,\n                      columnNumber: 29\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 405,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 397,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 21\n              }, this)]\n            }, node.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 5\n  }, this);\n};\n_s(RIPTab, \"Hdw0Prm/c503dFb2NM4ZEVviiA4=\");\n_c = RIPTab;\nexport default RIPTab;\nvar _c;\n$RefreshReg$(_c, \"RIPTab\");","map":{"version":3,"names":["React","useState","useEffect","motion","FiTarget","FiRefreshCw","FiMapPin","FiPlay","FiActivity","FiNavigation","FiGrid","axios","predefinedTopologies","jsxDEV","_jsxDEV","Fragment","_Fragment","RIPTab","_s","_networkData$nodes6","networkData","setNetworkData","nodes","links","sourceNode","setSourceNode","destNode","setDestNode","shortestPath","setShortestPath","loading","setLoading","error","setError","selectedNode","setSelectedNode","selectedTopology","setSelectedTopology","fetchNetworkData","_networkData$nodes","_networkData$nodes2","length","id","response","get","data","success","err","console","findShortestPath","post","source","destination","getNodeInfo","nodeId","find","node","getAvailableNodes","_networkData$nodes3","map","sort","calculateNetworkStats","_networkData$nodes4","_networkData$links","_networkData$links2","totalNodes","totalLinks","avgDegree","maxDistance","Math","max","l","distance","cost","toFixed","handleTopologyChange","e","topoKey","target","value","payload","topology","renderNetwork","_networkData$nodes5","svgWidth","svgHeight","width","height","className","children","link","idx","_ref","_link$cost","src","n","dst","x1","x","y1","y","x2","y2","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","fill","fontSize","fontWeight","textAnchor","cx","cy","r","offset","stopColor","div","animate","rotate","transition","duration","repeat","Infinity","ease","size","availableNodes","stats","onChange","Object","entries","key","topo","name","button","onClick","disabled","whileHover","scale","whileTap","initial","opacity","path","index","delay","neighbors","connections","routing_table","dest","info","next_hop","_c","$RefreshReg$"],"sources":["/Users/ayushratan/Desktop/projects/dcnn/Advanced-Protocol-Analysis-Security-Dashboard/frontend/src/components/tabs/RIPTab.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { FiTarget, FiRefreshCw, FiMapPin, FiPlay, FiActivity, FiNavigation, FiGrid } from 'react-icons/fi';\nimport axios from 'axios';\nimport predefinedTopologies from '../../topologies';\nimport './RIPTab.css';\n\nconst RIPTab = () => {\n  const [networkData, setNetworkData] = useState({ nodes: [], links: [] });\n  const [sourceNode, setSourceNode] = useState('');\n  const [destNode, setDestNode] = useState('');\n  const [shortestPath, setShortestPath] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [selectedTopology, setSelectedTopology] = useState('linear');\n\n  useEffect(() => {\n    fetchNetworkData();\n  }, []);\n\n  useEffect(() => {\n    // Set default source and destination when network data changes\n    if (networkData?.nodes?.length > 0 && !sourceNode) {\n      setSourceNode(networkData.nodes[0].id);\n    }\n    if (networkData?.nodes?.length > 1 && !destNode) {\n      setDestNode(networkData.nodes[networkData.nodes.length - 1].id);\n    }\n  }, [networkData, sourceNode, destNode]);\n\n  const fetchNetworkData = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get('/api/network/topology');\n      if (response.data.success) {\n        setNetworkData(response.data);\n        setError('');\n      } else {\n        setError('Failed to fetch network data');\n      }\n    } catch (err) {\n      setError('Error connecting to API');\n      console.error('Network fetch error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const findShortestPath = async () => {\n    if (!sourceNode || !destNode) {\n      setError('Please select both source and destination nodes');\n      return;\n    }\n\n    if (sourceNode === destNode) {\n      setError('Source and destination cannot be the same');\n      return;\n    }\n\n    setLoading(true);\n    setError('');\n\n    try {\n      const response = await axios.post('/api/rip/shortest-path', {\n        source: sourceNode,\n        destination: destNode\n      });\n\n      if (response.data.success) {\n        setShortestPath(response.data);\n        setError('');\n      } else {\n        setError(response.data.error || 'Failed to find path');\n      }\n    } catch (err) {\n      setError('Error connecting to API');\n      console.error('Path finding error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getNodeInfo = (nodeId) => {\n    return networkData.nodes.find(node => node.id === nodeId);\n  };\n\n  const getAvailableNodes = () => {\n    return networkData?.nodes?.map(node => node.id).sort() || [];\n  };\n\n  const calculateNetworkStats = () => {\n    const totalNodes = networkData?.nodes?.length || 0;\n    const totalLinks = networkData?.links?.length || 0;\n    const avgDegree = totalNodes > 0 ? (totalLinks * 2) / totalNodes : 0;\n    const maxDistance = networkData?.links?.length > 0 \n      ? Math.max(...networkData.links.map(l => l.distance || l.cost || 0)) \n      : 0;\n    \n    return { totalNodes, totalLinks, avgDegree: avgDegree.toFixed(1), maxDistance };\n  };\n\n  // When dropdown changes, load topology and refresh\n  const handleTopologyChange = async (e) => {\n    const topoKey = e.target.value;\n    setSelectedTopology(topoKey);\n    if (predefinedTopologies[topoKey]) {\n      const data = predefinedTopologies[topoKey];\n      const payload = {\n        topology: topoKey,\n        data: {\n          nodes: data.nodes,\n          links: data.links\n        }\n      };\n      try {\n        await axios.post('/api/network/load-topology', payload);\n        await fetchNetworkData();\n      } catch (err) {\n        console.error('Error loading topology:', err);\n      }\n    }\n  };\n\n  // Simple network render (SVG similar to overview)\n  const renderNetwork = () => {\n    if (!networkData?.nodes?.length) return null;\n    const svgWidth = 800;\n    const svgHeight = 400;\n\n    return (\n      <svg width={svgWidth} height={svgHeight} className=\"network-svg\">\n        {/* Links */}\n        {networkData.links.map((link, idx) => {\n          const src = networkData.nodes.find((n) => n.id === link.source);\n          const dst = networkData.nodes.find((n) => n.id === link.target);\n          if (!src || !dst) return null;\n          return (\n            <g key={`link-${idx}`}>\n              <line x1={src.x} y1={src.y} x2={dst.x} y2={dst.y} stroke=\"#00d4ff\" strokeWidth=\"2\" />\n              <text x={(src.x + dst.x) / 2} y={(src.y + dst.y) / 2 - 8} fill=\"#ffe66d\" fontSize=\"12\" fontWeight=\"600\" textAnchor=\"middle\">\n                {link.cost ?? link.distance ?? 1}\n              </text>\n            </g>\n          );\n        })}\n\n        {/* Nodes */}\n        {networkData.nodes.map((node) => (\n          <g key={node.id}>\n            <circle cx={node.x} cy={node.y} r=\"20\" fill=\"url(#gradNode)\" stroke=\"#00d4ff\" strokeWidth=\"2\" />\n            <text x={node.x} y={node.y + 5} fill=\"#ffffff\" fontSize=\"14\" fontWeight=\"700\" textAnchor=\"middle\">\n              {node.id}\n            </text>\n          </g>\n        ))}\n\n        <defs>\n          <radialGradient id=\"gradNode\" cx=\"30%\" cy=\"30%\">\n            <stop offset=\"0%\" stopColor=\"rgba(0, 212, 255, 0.3)\" />\n            <stop offset=\"100%\" stopColor=\"rgba(0, 150, 180, 0.8)\" />\n          </radialGradient>\n        </defs>\n      </svg>\n    );\n  };\n\n  if (loading && (!networkData?.nodes || networkData.nodes.length === 0)) {\n    return (\n      <div className=\"rip-tab\">\n        <div className=\"loading-container\">\n          <motion.div\n            animate={{ rotate: 360 }}\n            transition={{ duration: 1, repeat: Infinity, ease: \"linear\" }}\n            className=\"loading-spinner\"\n          >\n            <FiRefreshCw size={40} />\n          </motion.div>\n          <p>Loading network data...</p>\n        </div>\n      </div>\n    );\n  }\n\n  const availableNodes = getAvailableNodes();\n  const stats = calculateNetworkStats();\n\n  return (\n    <div className=\"rip-tab\">\n      <div className=\"tab-header\">\n        <div className=\"header-content\">\n          <h2>RIP Routing Protocol</h2>\n          <p>Routing Information Protocol - Distance Vector Algorithm</p>\n        </div>\n        <div className=\"header-actions\">\n          {/* Topology Selector */}\n          <select value={selectedTopology} onChange={handleTopologyChange} className=\"cyber-select\">\n            {Object.entries(predefinedTopologies).map(([key, topo]) => (\n              <option key={key} value={key}>{topo.name}</option>\n            ))}\n          </select>\n\n          <motion.button\n            className=\"action-btn secondary\"\n            onClick={fetchNetworkData}\n            disabled={loading}\n            whileHover={{ scale: loading ? 1 : 1.05 }}\n            whileTap={{ scale: loading ? 1 : 0.95 }}\n          >\n            <FiRefreshCw /> Refresh Network\n          </motion.button>\n        </div>\n      </div>\n\n      {error && (\n        <motion.div \n          className=\"error-message\"\n          initial={{ opacity: 0, y: -10 }}\n          animate={{ opacity: 1, y: 0 }}\n        >\n          {error}\n        </motion.div>\n      )}\n\n      <div className=\"rip-content\">\n        {/* Network Statistics */}\n        <div className=\"network-stats-section\">\n          <h3><FiActivity /> Network Statistics</h3>\n          <div className=\"stats-grid\">\n            <div className=\"stat-card\">\n              <div className=\"stat-value\">{stats.totalNodes}</div>\n              <div className=\"stat-label\">Total Nodes</div>\n            </div>\n            <div className=\"stat-card\">\n              <div className=\"stat-value\">{stats.totalLinks}</div>\n              <div className=\"stat-label\">Total Links</div>\n            </div>\n            <div className=\"stat-card\">\n              <div className=\"stat-value\">{stats.avgDegree}</div>\n              <div className=\"stat-label\">Avg Degree</div>\n            </div>\n            <div className=\"stat-card\">\n              <div className=\"stat-value\">{stats.maxDistance}</div>\n              <div className=\"stat-label\">Max Distance</div>\n            </div>\n          </div>\n        </div>\n\n        {availableNodes.length === 0 ? (\n          <div className=\"empty-network\">\n            <FiNavigation size={48} />\n            <h3>No Network Topology Found</h3>\n            <p>Please create a network in the Network Overview tab first.</p>\n            <motion.button\n              className=\"action-btn primary\"\n              onClick={fetchNetworkData}\n              whileHover={{ scale: 1.05 }}\n              whileTap={{ scale: 0.95 }}\n            >\n              <FiRefreshCw /> Retry\n            </motion.button>\n          </div>\n        ) : (\n          <>\n            <div className=\"routing-section\">\n              <div className=\"path-finder\">\n                <h3><FiNavigation /> Find Shortest Path</h3>\n                <div className=\"path-controls\">\n                  <div className=\"node-selector\">\n                    <label>\n                      <FiMapPin /> Source Node\n                    </label>\n                    <select\n                      value={sourceNode}\n                      onChange={(e) => setSourceNode(e.target.value)}\n                      className=\"cyber-select\"\n                    >\n                      <option value=\"\">Select Source</option>\n                      {availableNodes.map(node => (\n                        <option key={node} value={node}>Node {node}</option>\n                      ))}\n                    </select>\n                  </div>\n\n                  <div className=\"path-arrow\">\n                    <FiTarget />\n                  </div>\n\n                  <div className=\"node-selector\">\n                    <label>\n                      <FiTarget /> Destination Node\n                    </label>\n                    <select\n                      value={destNode}\n                      onChange={(e) => setDestNode(e.target.value)}\n                      className=\"cyber-select\"\n                    >\n                      <option value=\"\">Select Destination</option>\n                      {availableNodes.map(node => (\n                        <option key={node} value={node}>Node {node}</option>\n                      ))}\n                    </select>\n                  </div>\n\n                  <motion.button\n                    className=\"action-btn primary\"\n                    onClick={findShortestPath}\n                    disabled={loading || !sourceNode || !destNode}\n                    whileHover={{ scale: (loading || !sourceNode || !destNode) ? 1 : 1.05 }}\n                    whileTap={{ scale: (loading || !sourceNode || !destNode) ? 1 : 0.95 }}\n                  >\n                    {loading ? (\n                      <>\n                        <motion.div\n                          animate={{ rotate: 360 }}\n                          transition={{ duration: 1, repeat: Infinity, ease: \"linear\" }}\n                        >\n                          <FiRefreshCw />\n                        </motion.div>\n                        Finding...\n                      </>\n                    ) : (\n                      <>\n                        <FiPlay /> Find Path\n                      </>\n                    )}\n                  </motion.button>\n                </div>\n\n                {shortestPath && (\n                  <motion.div \n                    className=\"path-result\"\n                    initial={{ opacity: 0, y: 20 }}\n                    animate={{ opacity: 1, y: 0 }}\n                  >\n                    <div className=\"result-header\">\n                      <h4>Shortest Path Found</h4>\n                      <div className=\"path-stats\">\n                        <span className=\"stat\">\n                          <strong>Hops:</strong> {shortestPath.path ? shortestPath.path.length - 1 : 0}\n                        </span>\n                        <span className=\"stat\">\n                          <strong>Total Cost:</strong> {shortestPath.cost}\n                        </span>\n                      </div>\n                    </div>\n                    <div className=\"path-visualization\">\n                      {shortestPath.path && shortestPath.path.map((node, index) => (\n                        <React.Fragment key={node}>\n                          <motion.div\n                            className=\"path-node\"\n                            initial={{ scale: 0 }}\n                            animate={{ scale: 1 }}\n                            transition={{ delay: index * 0.1 }}\n                          >\n                            {node}\n                          </motion.div>\n                          {index < shortestPath.path.length - 1 && (\n                            <motion.div\n                              className=\"path-arrow-viz\"\n                              initial={{ opacity: 0 }}\n                              animate={{ opacity: 1 }}\n                              transition={{ delay: (index + 0.5) * 0.1 }}\n                            >\n                              →\n                            </motion.div>\n                          )}\n                        </React.Fragment>\n                      ))}\n                    </div>\n                  </motion.div>\n                )}\n              </div>\n            </div>\n\n            {/* Routing Tables */}\n            <div className=\"routing-tables-section\">\n              <h3>Routing Tables</h3>\n              <div className=\"tables-grid\">\n                {networkData?.nodes?.map((node, idx) => (\n                  <motion.div \n                    key={node.id}\n                    className={`routing-table-card ${selectedNode === node.id ? 'selected' : ''}`}\n                    onClick={() => setSelectedNode(selectedNode === node.id ? null : node.id)}\n                    whileHover={{ scale: 1.02 }}\n                    initial={{ opacity: 0, y: 20 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    transition={{ delay: idx * 0.1 }}\n                  >\n                    <div className=\"table-header\">\n                      <h4>Node {node.id}</h4>\n                      <div className=\"node-connections\">\n                        {(node.neighbors ? node.neighbors.length : (node.connections ? node.connections.length : 0))} connections\n                      </div>\n                    </div>\n                    <div className=\"routing-table\">\n                      <table>\n                        <thead>\n                          <tr>\n                            <th>Destination</th>\n                            <th>Next Hop</th>\n                            <th>Distance</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {Object.entries(node.routing_table || {}).map(([dest, info]) => (\n                            <tr key={dest} className={dest === node.id ? 'self-route' : ''}>\n                              <td className=\"dest-cell\">{dest}</td>\n                              <td className=\"hop-cell\">{info.next_hop || '-'}</td>\n                              <td className=\"distance-cell\">\n                                {info.distance === -1 ? '∞' : info.distance}\n                              </td>\n                            </tr>\n                          ))}\n                        </tbody>\n                      </table>\n                    </div>\n                  </motion.div>\n                ))}\n              </div>\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default RIPTab;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}