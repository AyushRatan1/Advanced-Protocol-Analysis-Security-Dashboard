{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import{motion}from'framer-motion';import{FiRefreshCw,FiPlay,FiPause,FiSettings}from'react-icons/fi';import axios from'axios';import'./NetworkVisualization.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const NetworkVisualization=()=>{const canvasRef=useRef(null);const[networkData,setNetworkData]=useState({nodes:[],links:[]});const[selectedNode,setSelectedNode]=useState(null);const[isAnimating,setIsAnimating]=useState(true);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);// Network positions for nodes A-F\nconst nodePositions={'A':{x:150,y:200},'B':{x:300,y:150},'C':{x:150,y:350},'D':{x:400,y:250},'E':{x:300,y:400},'F':{x:550,y:300}};useEffect(()=>{fetchNetworkData();},[]);useEffect(()=>{if(networkData.nodes.length>0){drawNetwork();}},[networkData,selectedNode,isAnimating]);const fetchNetworkData=async()=>{try{setLoading(true);const response=await axios.get('/api/rip/network');if(response.data.success){setNetworkData(response.data);}else{setError('Failed to fetch network data');}}catch(err){setError('Error connecting to API');console.error('Network fetch error:',err);}finally{setLoading(false);}};const drawNetwork=()=>{const canvas=canvasRef.current;if(!canvas)return;const ctx=canvas.getContext('2d');const rect=canvas.getBoundingClientRect();canvas.width=rect.width;canvas.height=rect.height;// Clear canvas\nctx.fillStyle='rgba(10, 10, 15, 0.9)';ctx.fillRect(0,0,canvas.width,canvas.height);// Draw grid\ndrawGrid(ctx,canvas.width,canvas.height);// Draw links first (so they appear behind nodes)\nnetworkData.links.forEach(link=>{drawLink(ctx,link);});// Draw nodes\nnetworkData.nodes.forEach(node=>{drawNode(ctx,node);});// Draw node labels\nnetworkData.nodes.forEach(node=>{drawNodeLabel(ctx,node);});};const drawGrid=(ctx,width,height)=>{ctx.strokeStyle='rgba(0, 212, 255, 0.1)';ctx.lineWidth=1;for(let x=0;x<width;x+=30){ctx.beginPath();ctx.moveTo(x,0);ctx.lineTo(x,height);ctx.stroke();}for(let y=0;y<height;y+=30){ctx.beginPath();ctx.moveTo(0,y);ctx.lineTo(width,y);ctx.stroke();}};const drawLink=(ctx,link)=>{const sourcePos=nodePositions[link.source];const targetPos=nodePositions[link.target];if(!sourcePos||!targetPos)return;ctx.strokeStyle=selectedNode===link.source||selectedNode===link.target?'#00d4ff':'rgba(0, 212, 255, 0.4)';ctx.lineWidth=selectedNode===link.source||selectedNode===link.target?3:2;// Draw animated line\nctx.beginPath();ctx.moveTo(sourcePos.x,sourcePos.y);ctx.lineTo(targetPos.x,targetPos.y);ctx.stroke();// Draw distance label\nconst midX=(sourcePos.x+targetPos.x)/2;const midY=(sourcePos.y+targetPos.y)/2;ctx.fillStyle='#ffe66d';ctx.font='12px JetBrains Mono';ctx.textAlign='center';ctx.fillText(link.distance.toString(),midX,midY-5);// Draw data flow animation\nif(isAnimating){drawDataFlow(ctx,sourcePos,targetPos);}};const drawDataFlow=(ctx,source,target)=>{const time=Date.now()*0.003;const progress=(Math.sin(time)+1)/2;const x=source.x+(target.x-source.x)*progress;const y=source.y+(target.y-source.y)*progress;ctx.fillStyle='#4ecdc4';ctx.beginPath();ctx.arc(x,y,3,0,Math.PI*2);ctx.fill();ctx.shadowColor='#4ecdc4';ctx.shadowBlur=10;ctx.fill();ctx.shadowBlur=0;};const drawNode=(ctx,node)=>{const pos=nodePositions[node.id];if(!pos)return;const isSelected=selectedNode===node.id;const time=Date.now()*0.002;const pulse=Math.sin(time)*0.1+1;// Draw node glow\nif(isSelected||isAnimating){ctx.shadowColor='#00d4ff';ctx.shadowBlur=20*pulse;}// Draw main node\nctx.fillStyle=isSelected?'#00d4ff':'#ff6b6b';ctx.beginPath();ctx.arc(pos.x,pos.y,isSelected?25*pulse:20,0,Math.PI*2);ctx.fill();ctx.shadowBlur=0;// Draw inner circle\nctx.fillStyle=isSelected?'rgba(255, 255, 255, 0.8)':'rgba(255, 255, 255, 0.6)';ctx.beginPath();ctx.arc(pos.x,pos.y,isSelected?15:12,0,Math.PI*2);ctx.fill();// Draw node border\nctx.strokeStyle=isSelected?'#ffffff':'rgba(255, 255, 255, 0.3)';ctx.lineWidth=2;ctx.beginPath();ctx.arc(pos.x,pos.y,isSelected?25*pulse:20,0,Math.PI*2);ctx.stroke();};const drawNodeLabel=(ctx,node)=>{const pos=nodePositions[node.id];if(!pos)return;ctx.fillStyle='#ffffff';ctx.font='bold 16px Inter';ctx.textAlign='center';ctx.fillText(node.id,pos.x,pos.y+5);};const handleCanvasClick=event=>{const canvas=canvasRef.current;const rect=canvas.getBoundingClientRect();const x=event.clientX-rect.left;const y=event.clientY-rect.top;// Check if click is on a node\nlet clickedNode=null;for(const node of networkData.nodes){const pos=nodePositions[node.id];if(pos){const distance=Math.sqrt((x-pos.x)**2+(y-pos.y)**2);if(distance<=25){clickedNode=node.id;break;}}}setSelectedNode(clickedNode);};const getSelectedNodeInfo=()=>{if(!selectedNode)return null;return networkData.nodes.find(node=>node.id===selectedNode);};if(loading){return/*#__PURE__*/_jsxs(\"div\",{className:\"network-loading\",children:[/*#__PURE__*/_jsx(motion.div,{animate:{rotate:360},transition:{duration:2,repeat:Infinity,ease:\"linear\"},children:/*#__PURE__*/_jsx(FiRefreshCw,{size:40})}),/*#__PURE__*/_jsx(\"p\",{children:\"Loading network topology...\"})]});}if(error){return/*#__PURE__*/_jsxs(\"div\",{className:\"network-error\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Error: \",error]}),/*#__PURE__*/_jsxs(\"button\",{onClick:fetchNetworkData,className:\"retry-button\",children:[/*#__PURE__*/_jsx(FiRefreshCw,{}),\" Retry\"]})]});}const selectedNodeInfo=getSelectedNodeInfo();return/*#__PURE__*/_jsxs(\"div\",{className:\"network-visualization\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"network-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Network Topology Overview\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"network-controls\",children:[/*#__PURE__*/_jsx(motion.button,{className:\"control-button \".concat(isAnimating?'active':''),onClick:()=>setIsAnimating(!isAnimating),whileHover:{scale:1.05},whileTap:{scale:0.95},children:isAnimating?/*#__PURE__*/_jsx(FiPause,{}):/*#__PURE__*/_jsx(FiPlay,{})}),/*#__PURE__*/_jsx(motion.button,{className:\"control-button\",onClick:fetchNetworkData,whileHover:{scale:1.05},whileTap:{scale:0.95},children:/*#__PURE__*/_jsx(FiRefreshCw,{})}),/*#__PURE__*/_jsx(motion.button,{className:\"control-button\",whileHover:{scale:1.05},whileTap:{scale:0.95},children:/*#__PURE__*/_jsx(FiSettings,{})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"network-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"network-canvas-container\",children:/*#__PURE__*/_jsx(\"canvas\",{ref:canvasRef,className:\"network-canvas\",onClick:handleCanvasClick})}),/*#__PURE__*/_jsxs(\"div\",{className:\"network-sidebar\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"network-stats\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Network Statistics\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-box\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-value\",children:networkData.nodes.length}),/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Nodes\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-box\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-value\",children:networkData.links.length}),/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Links\"})]})]})]}),selectedNodeInfo&&/*#__PURE__*/_jsxs(motion.div,{className:\"node-details\",initial:{opacity:0,y:20},animate:{opacity:1,y:0},transition:{duration:0.3},children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"Node \",selectedNodeInfo.id,\" Details\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"node-info\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Neighbors:\"}),\" \",selectedNodeInfo.neighbors.join(', ')]}),/*#__PURE__*/_jsxs(\"div\",{className:\"routing-table\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Routing Table\"}),/*#__PURE__*/_jsx(\"div\",{className:\"table-container\",children:/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Dest\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Next Hop\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Distance\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:Object.entries(selectedNodeInfo.routing_table).map(_ref=>{let[dest,info]=_ref;return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:dest}),/*#__PURE__*/_jsx(\"td\",{children:info.next_hop||'-'}),/*#__PURE__*/_jsx(\"td\",{children:info.distance===-1?'âˆž':info.distance})]},dest);})})]})})]})]})]})]})]})]});};export default NetworkVisualization;","map":{"version":3,"names":["React","useState","useEffect","useRef","motion","FiRefreshCw","FiPlay","FiPause","FiSettings","axios","jsx","_jsx","jsxs","_jsxs","NetworkVisualization","canvasRef","networkData","setNetworkData","nodes","links","selectedNode","setSelectedNode","isAnimating","setIsAnimating","loading","setLoading","error","setError","nodePositions","x","y","fetchNetworkData","length","drawNetwork","response","get","data","success","err","console","canvas","current","ctx","getContext","rect","getBoundingClientRect","width","height","fillStyle","fillRect","drawGrid","forEach","link","drawLink","node","drawNode","drawNodeLabel","strokeStyle","lineWidth","beginPath","moveTo","lineTo","stroke","sourcePos","source","targetPos","target","midX","midY","font","textAlign","fillText","distance","toString","drawDataFlow","time","Date","now","progress","Math","sin","arc","PI","fill","shadowColor","shadowBlur","pos","id","isSelected","pulse","handleCanvasClick","event","clientX","left","clientY","top","clickedNode","sqrt","getSelectedNodeInfo","find","className","children","div","animate","rotate","transition","duration","repeat","Infinity","ease","size","onClick","selectedNodeInfo","button","concat","whileHover","scale","whileTap","ref","initial","opacity","neighbors","join","Object","entries","routing_table","map","_ref","dest","info","next_hop"],"sources":["/Users/ayushratan/Desktop/projects/dcn/frontend/src/components/NetworkVisualization.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { motion } from 'framer-motion';\nimport { FiRefreshCw, FiPlay, FiPause, FiSettings } from 'react-icons/fi';\nimport axios from 'axios';\nimport './NetworkVisualization.css';\n\nconst NetworkVisualization = () => {\n  const canvasRef = useRef(null);\n  const [networkData, setNetworkData] = useState({ nodes: [], links: [] });\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [isAnimating, setIsAnimating] = useState(true);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Network positions for nodes A-F\n  const nodePositions = {\n    'A': { x: 150, y: 200 },\n    'B': { x: 300, y: 150 },\n    'C': { x: 150, y: 350 },\n    'D': { x: 400, y: 250 },\n    'E': { x: 300, y: 400 },\n    'F': { x: 550, y: 300 }\n  };\n\n  useEffect(() => {\n    fetchNetworkData();\n  }, []);\n\n  useEffect(() => {\n    if (networkData.nodes.length > 0) {\n      drawNetwork();\n    }\n  }, [networkData, selectedNode, isAnimating]);\n\n  const fetchNetworkData = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get('/api/rip/network');\n      if (response.data.success) {\n        setNetworkData(response.data);\n      } else {\n        setError('Failed to fetch network data');\n      }\n    } catch (err) {\n      setError('Error connecting to API');\n      console.error('Network fetch error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const drawNetwork = () => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    const rect = canvas.getBoundingClientRect();\n    canvas.width = rect.width;\n    canvas.height = rect.height;\n\n    // Clear canvas\n    ctx.fillStyle = 'rgba(10, 10, 15, 0.9)';\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n    // Draw grid\n    drawGrid(ctx, canvas.width, canvas.height);\n\n    // Draw links first (so they appear behind nodes)\n    networkData.links.forEach(link => {\n      drawLink(ctx, link);\n    });\n\n    // Draw nodes\n    networkData.nodes.forEach(node => {\n      drawNode(ctx, node);\n    });\n\n    // Draw node labels\n    networkData.nodes.forEach(node => {\n      drawNodeLabel(ctx, node);\n    });\n  };\n\n  const drawGrid = (ctx, width, height) => {\n    ctx.strokeStyle = 'rgba(0, 212, 255, 0.1)';\n    ctx.lineWidth = 1;\n    \n    for (let x = 0; x < width; x += 30) {\n      ctx.beginPath();\n      ctx.moveTo(x, 0);\n      ctx.lineTo(x, height);\n      ctx.stroke();\n    }\n    \n    for (let y = 0; y < height; y += 30) {\n      ctx.beginPath();\n      ctx.moveTo(0, y);\n      ctx.lineTo(width, y);\n      ctx.stroke();\n    }\n  };\n\n  const drawLink = (ctx, link) => {\n    const sourcePos = nodePositions[link.source];\n    const targetPos = nodePositions[link.target];\n    \n    if (!sourcePos || !targetPos) return;\n\n    ctx.strokeStyle = selectedNode === link.source || selectedNode === link.target \n      ? '#00d4ff' : 'rgba(0, 212, 255, 0.4)';\n    ctx.lineWidth = selectedNode === link.source || selectedNode === link.target ? 3 : 2;\n    \n    // Draw animated line\n    ctx.beginPath();\n    ctx.moveTo(sourcePos.x, sourcePos.y);\n    ctx.lineTo(targetPos.x, targetPos.y);\n    ctx.stroke();\n\n    // Draw distance label\n    const midX = (sourcePos.x + targetPos.x) / 2;\n    const midY = (sourcePos.y + targetPos.y) / 2;\n    \n    ctx.fillStyle = '#ffe66d';\n    ctx.font = '12px JetBrains Mono';\n    ctx.textAlign = 'center';\n    ctx.fillText(link.distance.toString(), midX, midY - 5);\n\n    // Draw data flow animation\n    if (isAnimating) {\n      drawDataFlow(ctx, sourcePos, targetPos);\n    }\n  };\n\n  const drawDataFlow = (ctx, source, target) => {\n    const time = Date.now() * 0.003;\n    const progress = (Math.sin(time) + 1) / 2;\n    \n    const x = source.x + (target.x - source.x) * progress;\n    const y = source.y + (target.y - source.y) * progress;\n    \n    ctx.fillStyle = '#4ecdc4';\n    ctx.beginPath();\n    ctx.arc(x, y, 3, 0, Math.PI * 2);\n    ctx.fill();\n    \n    ctx.shadowColor = '#4ecdc4';\n    ctx.shadowBlur = 10;\n    ctx.fill();\n    ctx.shadowBlur = 0;\n  };\n\n  const drawNode = (ctx, node) => {\n    const pos = nodePositions[node.id];\n    if (!pos) return;\n\n    const isSelected = selectedNode === node.id;\n    const time = Date.now() * 0.002;\n    const pulse = Math.sin(time) * 0.1 + 1;\n\n    // Draw node glow\n    if (isSelected || isAnimating) {\n      ctx.shadowColor = '#00d4ff';\n      ctx.shadowBlur = 20 * pulse;\n    }\n\n    // Draw main node\n    ctx.fillStyle = isSelected ? '#00d4ff' : '#ff6b6b';\n    ctx.beginPath();\n    ctx.arc(pos.x, pos.y, isSelected ? 25 * pulse : 20, 0, Math.PI * 2);\n    ctx.fill();\n    ctx.shadowBlur = 0;\n\n    // Draw inner circle\n    ctx.fillStyle = isSelected ? 'rgba(255, 255, 255, 0.8)' : 'rgba(255, 255, 255, 0.6)';\n    ctx.beginPath();\n    ctx.arc(pos.x, pos.y, isSelected ? 15 : 12, 0, Math.PI * 2);\n    ctx.fill();\n\n    // Draw node border\n    ctx.strokeStyle = isSelected ? '#ffffff' : 'rgba(255, 255, 255, 0.3)';\n    ctx.lineWidth = 2;\n    ctx.beginPath();\n    ctx.arc(pos.x, pos.y, isSelected ? 25 * pulse : 20, 0, Math.PI * 2);\n    ctx.stroke();\n  };\n\n  const drawNodeLabel = (ctx, node) => {\n    const pos = nodePositions[node.id];\n    if (!pos) return;\n\n    ctx.fillStyle = '#ffffff';\n    ctx.font = 'bold 16px Inter';\n    ctx.textAlign = 'center';\n    ctx.fillText(node.id, pos.x, pos.y + 5);\n  };\n\n  const handleCanvasClick = (event) => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n\n    // Check if click is on a node\n    let clickedNode = null;\n    for (const node of networkData.nodes) {\n      const pos = nodePositions[node.id];\n      if (pos) {\n        const distance = Math.sqrt((x - pos.x) ** 2 + (y - pos.y) ** 2);\n        if (distance <= 25) {\n          clickedNode = node.id;\n          break;\n        }\n      }\n    }\n\n    setSelectedNode(clickedNode);\n  };\n\n  const getSelectedNodeInfo = () => {\n    if (!selectedNode) return null;\n    return networkData.nodes.find(node => node.id === selectedNode);\n  };\n\n  if (loading) {\n    return (\n      <div className=\"network-loading\">\n        <motion.div\n          animate={{ rotate: 360 }}\n          transition={{ duration: 2, repeat: Infinity, ease: \"linear\" }}\n        >\n          <FiRefreshCw size={40} />\n        </motion.div>\n        <p>Loading network topology...</p>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"network-error\">\n        <p>Error: {error}</p>\n        <button onClick={fetchNetworkData} className=\"retry-button\">\n          <FiRefreshCw /> Retry\n        </button>\n      </div>\n    );\n  }\n\n  const selectedNodeInfo = getSelectedNodeInfo();\n\n  return (\n    <div className=\"network-visualization\">\n      <div className=\"network-header\">\n        <h2>Network Topology Overview</h2>\n        <div className=\"network-controls\">\n          <motion.button\n            className={`control-button ${isAnimating ? 'active' : ''}`}\n            onClick={() => setIsAnimating(!isAnimating)}\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n          >\n            {isAnimating ? <FiPause /> : <FiPlay />}\n          </motion.button>\n          <motion.button\n            className=\"control-button\"\n            onClick={fetchNetworkData}\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n          >\n            <FiRefreshCw />\n          </motion.button>\n          <motion.button\n            className=\"control-button\"\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n          >\n            <FiSettings />\n          </motion.button>\n        </div>\n      </div>\n\n      <div className=\"network-content\">\n        <div className=\"network-canvas-container\">\n          <canvas\n            ref={canvasRef}\n            className=\"network-canvas\"\n            onClick={handleCanvasClick}\n          />\n        </div>\n\n        <div className=\"network-sidebar\">\n          <div className=\"network-stats\">\n            <h3>Network Statistics</h3>\n            <div className=\"stat-grid\">\n              <div className=\"stat-box\">\n                <span className=\"stat-value\">{networkData.nodes.length}</span>\n                <span className=\"stat-label\">Nodes</span>\n              </div>\n              <div className=\"stat-box\">\n                <span className=\"stat-value\">{networkData.links.length}</span>\n                <span className=\"stat-label\">Links</span>\n              </div>\n            </div>\n          </div>\n\n          {selectedNodeInfo && (\n            <motion.div\n              className=\"node-details\"\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.3 }}\n            >\n              <h3>Node {selectedNodeInfo.id} Details</h3>\n              <div className=\"node-info\">\n                <p><strong>Neighbors:</strong> {selectedNodeInfo.neighbors.join(', ')}</p>\n                <div className=\"routing-table\">\n                  <h4>Routing Table</h4>\n                  <div className=\"table-container\">\n                    <table>\n                      <thead>\n                        <tr>\n                          <th>Dest</th>\n                          <th>Next Hop</th>\n                          <th>Distance</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {Object.entries(selectedNodeInfo.routing_table).map(([dest, info]) => (\n                          <tr key={dest}>\n                            <td>{dest}</td>\n                            <td>{info.next_hop || '-'}</td>\n                            <td>{info.distance === -1 ? 'âˆž' : info.distance}</td>\n                          </tr>\n                        ))}\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              </div>\n            </motion.div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NetworkVisualization;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}