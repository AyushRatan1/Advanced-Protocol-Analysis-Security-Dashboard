{"ast":null,"code":"import _objectSpread from\"/Users/ayushratan/Desktop/projects/dcn/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState}from'react';import{motion}from'framer-motion';import{FiPlay,FiRefreshCw,FiBarChart,FiSettings}from'react-icons/fi';import axios from'axios';import'./TCPTab.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const TCPTab=()=>{const[config,setConfig]=useState({data_size:10000,mss:1460,initial_cwnd:1,ssthresh:65535,packet_loss_rate:0.05,max_time:100});const[results,setResults]=useState(null);const[plotImage,setPlotImage]=useState('');const[loading,setLoading]=useState(false);const[error,setError]=useState('');const handleConfigChange=(key,value)=>{setConfig(prev=>_objectSpread(_objectSpread({},prev),{},{[key]:parseFloat(value)||0}));};const runSimulation=async()=>{setLoading(true);setError('');try{const response=await axios.post('/api/tcp/simulate',config);if(response.data.success){setResults(response.data.results);setPlotImage(response.data.plot);}else{setError(response.data.error||'Simulation failed');}}catch(err){setError('Error connecting to API');console.error('TCP simulation error:',err);}finally{setLoading(false);}};const resetConfig=()=>{setConfig({data_size:10000,mss:1460,initial_cwnd:1,ssthresh:65535,packet_loss_rate:0.05,max_time:100});setResults(null);setPlotImage('');};const getStateColor=state=>{switch(state){case'slow_start':return'#4ecdc4';case'congestion_avoidance':return'#ffe66d';case'fast_recovery':return'#ff6b6b';default:return'#6c7293';}};return/*#__PURE__*/_jsxs(\"div\",{className:\"tcp-tab\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"tab-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"header-content\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"TCP Reno Simulation\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Congestion Control Algorithm - Slow Start, Congestion Avoidance & Fast Recovery\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"header-actions\",children:/*#__PURE__*/_jsxs(motion.button,{className:\"action-btn secondary\",onClick:resetConfig,whileHover:{scale:1.05},whileTap:{scale:0.95},children:[/*#__PURE__*/_jsx(FiRefreshCw,{}),\" Reset\"]})})]}),error&&/*#__PURE__*/_jsx(motion.div,{className:\"error-message\",initial:{opacity:0,y:-10},animate:{opacity:1,y:0},children:error}),/*#__PURE__*/_jsxs(\"div\",{className:\"tcp-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"simulation-controls\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"controls-header\",children:/*#__PURE__*/_jsxs(\"h3\",{children:[/*#__PURE__*/_jsx(FiSettings,{}),\" Simulation Parameters\"]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"controls-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"control-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Data Size (bytes)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:config.data_size,onChange:e=>handleConfigChange('data_size',e.target.value),className:\"cyber-input\",min:\"1\",max:\"1000000\"}),/*#__PURE__*/_jsx(\"span\",{className:\"control-hint\",children:\"Amount of data to transmit\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"control-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"MSS (bytes)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:config.mss,onChange:e=>handleConfigChange('mss',e.target.value),className:\"cyber-input\",min:\"1\",max:\"9000\"}),/*#__PURE__*/_jsx(\"span\",{className:\"control-hint\",children:\"Maximum Segment Size\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"control-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Initial CWND\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:config.initial_cwnd,onChange:e=>handleConfigChange('initial_cwnd',e.target.value),className:\"cyber-input\",min:\"1\",max:\"100\"}),/*#__PURE__*/_jsx(\"span\",{className:\"control-hint\",children:\"Initial congestion window size\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"control-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"SSThresh\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:config.ssthresh,onChange:e=>handleConfigChange('ssthresh',e.target.value),className:\"cyber-input\",min:\"1\",max:\"100000\"}),/*#__PURE__*/_jsx(\"span\",{className:\"control-hint\",children:\"Slow start threshold\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"control-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Packet Loss Rate\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",step:\"0.01\",value:config.packet_loss_rate,onChange:e=>handleConfigChange('packet_loss_rate',e.target.value),className:\"cyber-input\",min:\"0\",max:\"1\"}),/*#__PURE__*/_jsx(\"span\",{className:\"control-hint\",children:\"Probability of packet loss (0-1)\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"control-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Max Time Steps\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:config.max_time,onChange:e=>handleConfigChange('max_time',e.target.value),className:\"cyber-input\",min:\"10\",max:\"1000\"}),/*#__PURE__*/_jsx(\"span\",{className:\"control-hint\",children:\"Maximum simulation duration\"})]})]}),/*#__PURE__*/_jsx(motion.button,{className:\"action-btn primary large\",onClick:runSimulation,disabled:loading,whileHover:{scale:loading?1:1.05},whileTap:{scale:loading?1:0.95},children:loading?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(motion.div,{animate:{rotate:360},transition:{duration:1,repeat:Infinity,ease:\"linear\"},children:/*#__PURE__*/_jsx(FiRefreshCw,{})}),\"Running Simulation...\"]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(FiPlay,{}),\" Run TCP Simulation\"]})})]}),results&&/*#__PURE__*/_jsxs(motion.div,{className:\"simulation-results\",initial:{opacity:0,y:20},animate:{opacity:1,y:0},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"results-header\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[/*#__PURE__*/_jsx(FiBarChart,{}),\" Simulation Results\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"transmission-status\",children:/*#__PURE__*/_jsx(\"span\",{className:\"status-badge \".concat(results.transmission_complete?'success':'warning'),children:results.transmission_complete?'Complete':'Incomplete'})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"results-stats\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-value\",children:results.data_transmitted}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-label\",children:\"Bytes Transmitted\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-total\",children:[\"of \",results.data_size]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-value\",children:results.time_steps}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-label\",children:\"Time Steps\"}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-total\",children:\"Duration\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-value\",children:results.total_packets_sent}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-label\",children:\"Packets Sent\"}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-total\",children:\"Total\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-value\",children:results.packets_lost}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-label\",children:\"Packets Lost\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-total\",children:[(results.packets_lost/results.total_packets_sent*100).toFixed(2),\"%\"]})]})]}),plotImage&&/*#__PURE__*/_jsxs(\"div\",{className:\"plot-container\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Congestion Window Evolution\"}),/*#__PURE__*/_jsx(\"div\",{className:\"plot-image\",children:/*#__PURE__*/_jsx(\"img\",{src:\"data:image/png;base64,\".concat(plotImage),alt:\"TCP Reno Simulation Plot\",style:{width:'100%',height:'auto',borderRadius:'10px'}})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"detailed-stats\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stats-section\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"State Distribution\"}),/*#__PURE__*/_jsx(\"div\",{className:\"state-stats\",children:results.state_history&&Object.entries(results.state_history.reduce((acc,state)=>{acc[state]=(acc[state]||0)+1;return acc;},{})).map(_ref=>{let[state,count]=_ref;return/*#__PURE__*/_jsxs(\"div\",{className:\"state-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"state-color\",style:{backgroundColor:getStateColor(state)}}),/*#__PURE__*/_jsx(\"span\",{className:\"state-name\",children:state.replace('_',' ').toUpperCase()}),/*#__PURE__*/_jsxs(\"span\",{className:\"state-count\",children:[count,\" steps (\",(count/results.state_history.length*100).toFixed(1),\"%)\"]})]},state);})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stats-section\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Performance Metrics\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"metrics-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"metric-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"metric-label\",children:\"Throughput:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"metric-value\",children:[(results.data_transmitted/results.time_steps).toFixed(2),\" bytes/step\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"metric-label\",children:\"Efficiency:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"metric-value\",children:[(results.data_transmitted/results.data_size*100).toFixed(2),\"%\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"metric-label\",children:\"Loss Rate:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"metric-value\",children:[(results.packets_lost/results.total_packets_sent*100).toFixed(2),\"%\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"metric-label\",children:\"Max CWND:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"metric-value\",children:[Math.max(...results.cwnd_history).toFixed(2),\" MSS\"]})]})]})]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"tcp-info\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"TCP Reno Algorithm\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-phases\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"phase-card slow-start\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Slow Start\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Exponential growth phase where CWND doubles each RTT until reaching SSThresh.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"phase-card congestion-avoidance\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Congestion Avoidance\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Linear growth phase where CWND increases by 1 MSS per RTT.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"phase-card fast-recovery\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Fast Recovery\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Recovery phase triggered by 3 duplicate ACKs, avoiding timeout.\"})]})]})]})]});};export default TCPTab;","map":{"version":3,"names":["React","useState","motion","FiPlay","FiRefreshCw","FiBarChart","FiSettings","axios","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","TCPTab","config","setConfig","data_size","mss","initial_cwnd","ssthresh","packet_loss_rate","max_time","results","setResults","plotImage","setPlotImage","loading","setLoading","error","setError","handleConfigChange","key","value","prev","_objectSpread","parseFloat","runSimulation","response","post","data","success","plot","err","console","resetConfig","getStateColor","state","className","children","button","onClick","whileHover","scale","whileTap","div","initial","opacity","y","animate","type","onChange","e","target","min","max","step","disabled","rotate","transition","duration","repeat","Infinity","ease","concat","transmission_complete","data_transmitted","time_steps","total_packets_sent","packets_lost","toFixed","src","alt","style","width","height","borderRadius","state_history","Object","entries","reduce","acc","map","_ref","count","backgroundColor","replace","toUpperCase","length","Math","cwnd_history"],"sources":["/Users/ayushratan/Desktop/projects/dcn/frontend/src/components/tabs/TCPTab.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { motion } from 'framer-motion';\nimport { FiPlay, FiRefreshCw, FiBarChart, FiSettings } from 'react-icons/fi';\nimport axios from 'axios';\nimport './TCPTab.css';\n\nconst TCPTab = () => {\n  const [config, setConfig] = useState({\n    data_size: 10000,\n    mss: 1460,\n    initial_cwnd: 1,\n    ssthresh: 65535,\n    packet_loss_rate: 0.05,\n    max_time: 100\n  });\n  \n  const [results, setResults] = useState(null);\n  const [plotImage, setPlotImage] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const handleConfigChange = (key, value) => {\n    setConfig(prev => ({\n      ...prev,\n      [key]: parseFloat(value) || 0\n    }));\n  };\n\n  const runSimulation = async () => {\n    setLoading(true);\n    setError('');\n\n    try {\n      const response = await axios.post('/api/tcp/simulate', config);\n      \n      if (response.data.success) {\n        setResults(response.data.results);\n        setPlotImage(response.data.plot);\n      } else {\n        setError(response.data.error || 'Simulation failed');\n      }\n    } catch (err) {\n      setError('Error connecting to API');\n      console.error('TCP simulation error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const resetConfig = () => {\n    setConfig({\n      data_size: 10000,\n      mss: 1460,\n      initial_cwnd: 1,\n      ssthresh: 65535,\n      packet_loss_rate: 0.05,\n      max_time: 100\n    });\n    setResults(null);\n    setPlotImage('');\n  };\n\n  const getStateColor = (state) => {\n    switch (state) {\n      case 'slow_start': return '#4ecdc4';\n      case 'congestion_avoidance': return '#ffe66d';\n      case 'fast_recovery': return '#ff6b6b';\n      default: return '#6c7293';\n    }\n  };\n\n  return (\n    <div className=\"tcp-tab\">\n      <div className=\"tab-header\">\n        <div className=\"header-content\">\n          <h2>TCP Reno Simulation</h2>\n          <p>Congestion Control Algorithm - Slow Start, Congestion Avoidance & Fast Recovery</p>\n        </div>\n        <div className=\"header-actions\">\n          <motion.button\n            className=\"action-btn secondary\"\n            onClick={resetConfig}\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n          >\n            <FiRefreshCw /> Reset\n          </motion.button>\n        </div>\n      </div>\n\n      {error && (\n        <motion.div \n          className=\"error-message\"\n          initial={{ opacity: 0, y: -10 }}\n          animate={{ opacity: 1, y: 0 }}\n        >\n          {error}\n        </motion.div>\n      )}\n\n      <div className=\"tcp-content\">\n        <div className=\"simulation-controls\">\n          <div className=\"controls-header\">\n            <h3><FiSettings /> Simulation Parameters</h3>\n          </div>\n          \n          <div className=\"controls-grid\">\n            <div className=\"control-group\">\n              <label>Data Size (bytes)</label>\n              <input\n                type=\"number\"\n                value={config.data_size}\n                onChange={(e) => handleConfigChange('data_size', e.target.value)}\n                className=\"cyber-input\"\n                min=\"1\"\n                max=\"1000000\"\n              />\n              <span className=\"control-hint\">Amount of data to transmit</span>\n            </div>\n\n            <div className=\"control-group\">\n              <label>MSS (bytes)</label>\n              <input\n                type=\"number\"\n                value={config.mss}\n                onChange={(e) => handleConfigChange('mss', e.target.value)}\n                className=\"cyber-input\"\n                min=\"1\"\n                max=\"9000\"\n              />\n              <span className=\"control-hint\">Maximum Segment Size</span>\n            </div>\n\n            <div className=\"control-group\">\n              <label>Initial CWND</label>\n              <input\n                type=\"number\"\n                value={config.initial_cwnd}\n                onChange={(e) => handleConfigChange('initial_cwnd', e.target.value)}\n                className=\"cyber-input\"\n                min=\"1\"\n                max=\"100\"\n              />\n              <span className=\"control-hint\">Initial congestion window size</span>\n            </div>\n\n            <div className=\"control-group\">\n              <label>SSThresh</label>\n              <input\n                type=\"number\"\n                value={config.ssthresh}\n                onChange={(e) => handleConfigChange('ssthresh', e.target.value)}\n                className=\"cyber-input\"\n                min=\"1\"\n                max=\"100000\"\n              />\n              <span className=\"control-hint\">Slow start threshold</span>\n            </div>\n\n            <div className=\"control-group\">\n              <label>Packet Loss Rate</label>\n              <input\n                type=\"number\"\n                step=\"0.01\"\n                value={config.packet_loss_rate}\n                onChange={(e) => handleConfigChange('packet_loss_rate', e.target.value)}\n                className=\"cyber-input\"\n                min=\"0\"\n                max=\"1\"\n              />\n              <span className=\"control-hint\">Probability of packet loss (0-1)</span>\n            </div>\n\n            <div className=\"control-group\">\n              <label>Max Time Steps</label>\n              <input\n                type=\"number\"\n                value={config.max_time}\n                onChange={(e) => handleConfigChange('max_time', e.target.value)}\n                className=\"cyber-input\"\n                min=\"10\"\n                max=\"1000\"\n              />\n              <span className=\"control-hint\">Maximum simulation duration</span>\n            </div>\n          </div>\n\n          <motion.button\n            className=\"action-btn primary large\"\n            onClick={runSimulation}\n            disabled={loading}\n            whileHover={{ scale: loading ? 1 : 1.05 }}\n            whileTap={{ scale: loading ? 1 : 0.95 }}\n          >\n            {loading ? (\n              <>\n                <motion.div\n                  animate={{ rotate: 360 }}\n                  transition={{ duration: 1, repeat: Infinity, ease: \"linear\" }}\n                >\n                  <FiRefreshCw />\n                </motion.div>\n                Running Simulation...\n              </>\n            ) : (\n              <>\n                <FiPlay /> Run TCP Simulation\n              </>\n            )}\n          </motion.button>\n        </div>\n\n        {results && (\n          <motion.div \n            className=\"simulation-results\"\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n          >\n            <div className=\"results-header\">\n              <h3><FiBarChart /> Simulation Results</h3>\n              <div className=\"transmission-status\">\n                <span className={`status-badge ${results.transmission_complete ? 'success' : 'warning'}`}>\n                  {results.transmission_complete ? 'Complete' : 'Incomplete'}\n                </span>\n              </div>\n            </div>\n\n            <div className=\"results-stats\">\n              <div className=\"stat-card\">\n                <div className=\"stat-value\">{results.data_transmitted}</div>\n                <div className=\"stat-label\">Bytes Transmitted</div>\n                <div className=\"stat-total\">of {results.data_size}</div>\n              </div>\n\n              <div className=\"stat-card\">\n                <div className=\"stat-value\">{results.time_steps}</div>\n                <div className=\"stat-label\">Time Steps</div>\n                <div className=\"stat-total\">Duration</div>\n              </div>\n\n              <div className=\"stat-card\">\n                <div className=\"stat-value\">{results.total_packets_sent}</div>\n                <div className=\"stat-label\">Packets Sent</div>\n                <div className=\"stat-total\">Total</div>\n              </div>\n\n              <div className=\"stat-card\">\n                <div className=\"stat-value\">{results.packets_lost}</div>\n                <div className=\"stat-label\">Packets Lost</div>\n                <div className=\"stat-total\">\n                  {((results.packets_lost / results.total_packets_sent) * 100).toFixed(2)}%\n                </div>\n              </div>\n            </div>\n\n            {plotImage && (\n              <div className=\"plot-container\">\n                <h4>Congestion Window Evolution</h4>\n                <div className=\"plot-image\">\n                  <img \n                    src={`data:image/png;base64,${plotImage}`} \n                    alt=\"TCP Reno Simulation Plot\"\n                    style={{ width: '100%', height: 'auto', borderRadius: '10px' }}\n                  />\n                </div>\n              </div>\n            )}\n\n            <div className=\"detailed-stats\">\n              <div className=\"stats-section\">\n                <h4>State Distribution</h4>\n                <div className=\"state-stats\">\n                  {results.state_history && \n                    Object.entries(\n                      results.state_history.reduce((acc, state) => {\n                        acc[state] = (acc[state] || 0) + 1;\n                        return acc;\n                      }, {})\n                    ).map(([state, count]) => (\n                      <div key={state} className=\"state-item\">\n                        <div \n                          className=\"state-color\"\n                          style={{ backgroundColor: getStateColor(state) }}\n                        />\n                        <span className=\"state-name\">\n                          {state.replace('_', ' ').toUpperCase()}\n                        </span>\n                        <span className=\"state-count\">\n                          {count} steps ({((count / results.state_history.length) * 100).toFixed(1)}%)\n                        </span>\n                      </div>\n                    ))\n                  }\n                </div>\n              </div>\n\n              <div className=\"stats-section\">\n                <h4>Performance Metrics</h4>\n                <div className=\"metrics-grid\">\n                  <div className=\"metric-item\">\n                    <span className=\"metric-label\">Throughput:</span>\n                    <span className=\"metric-value\">\n                      {(results.data_transmitted / results.time_steps).toFixed(2)} bytes/step\n                    </span>\n                  </div>\n                  <div className=\"metric-item\">\n                    <span className=\"metric-label\">Efficiency:</span>\n                    <span className=\"metric-value\">\n                      {((results.data_transmitted / results.data_size) * 100).toFixed(2)}%\n                    </span>\n                  </div>\n                  <div className=\"metric-item\">\n                    <span className=\"metric-label\">Loss Rate:</span>\n                    <span className=\"metric-value\">\n                      {((results.packets_lost / results.total_packets_sent) * 100).toFixed(2)}%\n                    </span>\n                  </div>\n                  <div className=\"metric-item\">\n                    <span className=\"metric-label\">Max CWND:</span>\n                    <span className=\"metric-value\">\n                      {Math.max(...results.cwnd_history).toFixed(2)} MSS\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </motion.div>\n        )}\n      </div>\n\n      <div className=\"tcp-info\">\n        <h3>TCP Reno Algorithm</h3>\n        <div className=\"info-phases\">\n          <div className=\"phase-card slow-start\">\n            <h4>Slow Start</h4>\n            <p>Exponential growth phase where CWND doubles each RTT until reaching SSThresh.</p>\n          </div>\n          <div className=\"phase-card congestion-avoidance\">\n            <h4>Congestion Avoidance</h4>\n            <p>Linear growth phase where CWND increases by 1 MSS per RTT.</p>\n          </div>\n          <div className=\"phase-card fast-recovery\">\n            <h4>Fast Recovery</h4>\n            <p>Recovery phase triggered by 3 duplicate ACKs, avoiding timeout.</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TCPTab;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}