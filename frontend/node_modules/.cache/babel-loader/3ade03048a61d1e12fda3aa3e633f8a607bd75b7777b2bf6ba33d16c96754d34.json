{"ast":null,"code":"var _jsxFileName = \"/Users/ayushratan/Desktop/projects/dcnn/Advanced-Protocol-Analysis-Security-Dashboard/frontend/src/components/NetworkVisualization.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { FiRefreshCw, FiSave, FiDownload, FiGrid, FiActivity } from 'react-icons/fi';\nimport axios from 'axios';\nimport './NetworkVisualization.css';\nimport predefinedTopologies from '../topologies';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NetworkVisualization = () => {\n  _s();\n  const [currentTopology, setCurrentTopology] = useState('linear');\n  const [networkData, setNetworkData] = useState({\n    nodes: [],\n    links: []\n  });\n  const [loading, setLoading] = useState(false);\n  const [animationPaused, setAnimationPaused] = useState(false);\n  useEffect(() => {\n    loadTopology(currentTopology);\n  }, [currentTopology]);\n  const loadTopology = async topologyKey => {\n    setLoading(true);\n    try {\n      const topology = predefinedTopologies[topologyKey];\n      const networkData = {\n        nodes: topology.nodes,\n        links: topology.links\n      };\n      setNetworkData(networkData);\n\n      // Send to backend\n      await axios.post('/api/network/load-topology', {\n        topology: topologyKey,\n        data: networkData\n      });\n    } catch (error) {\n      console.error('Error loading topology:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const saveCurrentNetwork = async () => {\n    try {\n      await axios.post('/api/network/save', networkData);\n    } catch (error) {\n      console.error('Error saving network:', error);\n    }\n  };\n  const refreshNetwork = () => {\n    loadTopology(currentTopology);\n  };\n  const getCurrentTopologyInfo = () => {\n    return predefinedTopologies[currentTopology];\n  };\n  const renderNetwork = () => {\n    if (!networkData.nodes.length) return null;\n    const svgWidth = 800;\n    const svgHeight = 400;\n    return /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: svgWidth,\n      height: svgHeight,\n      className: \"network-svg\",\n      children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n        children: /*#__PURE__*/_jsxDEV(\"pattern\", {\n          id: \"grid\",\n          width: \"40\",\n          height: \"40\",\n          patternUnits: \"userSpaceOnUse\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M 40 0 L 0 0 0 40\",\n            fill: \"none\",\n            stroke: \"rgba(255,255,255,0.1)\",\n            strokeWidth: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n        width: \"100%\",\n        height: \"100%\",\n        fill: \"url(#grid)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), networkData.links.map((link, index) => {\n        const sourceNode = networkData.nodes.find(n => n.id === link.source);\n        const targetNode = networkData.nodes.find(n => n.id === link.target);\n        if (!sourceNode || !targetNode) return null;\n        return /*#__PURE__*/_jsxDEV(\"g\", {\n          children: [/*#__PURE__*/_jsxDEV(motion.line, {\n            x1: sourceNode.x,\n            y1: sourceNode.y,\n            x2: targetNode.x,\n            y2: targetNode.y,\n            stroke: \"rgba(0, 212, 255, 0.8)\",\n            strokeWidth: \"3\",\n            className: \"network-link\",\n            initial: {\n              strokeDasharray: \"5,5\",\n              strokeDashoffset: 10\n            },\n            animate: !animationPaused ? {\n              strokeDashoffset: [10, 0],\n              stroke: [\"rgba(0, 212, 255, 0.8)\", \"rgba(255, 107, 107, 0.8)\", \"rgba(0, 212, 255, 0.8)\"]\n            } : {},\n            transition: {\n              strokeDashoffset: {\n                duration: 2,\n                repeat: Infinity,\n                ease: \"linear\"\n              },\n              stroke: {\n                duration: 3,\n                repeat: Infinity,\n                ease: \"easeInOut\"\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n            x: (sourceNode.x + targetNode.x) / 2,\n            y: (sourceNode.y + targetNode.y) / 2 - 10,\n            fill: \"rgba(255, 230, 109, 0.9)\",\n            fontSize: \"12\",\n            fontWeight: \"600\",\n            textAnchor: \"middle\",\n            className: \"cost-label\",\n            children: link.cost\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)]\n        }, `link-${index}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this);\n      }), networkData.nodes.map((node, index) => /*#__PURE__*/_jsxDEV(\"g\", {\n        children: [/*#__PURE__*/_jsxDEV(motion.circle, {\n          cx: node.x,\n          cy: node.y,\n          r: \"25\",\n          fill: \"url(#nodeGradient)\",\n          stroke: \"rgba(0, 212, 255, 0.8)\",\n          strokeWidth: \"3\",\n          className: \"network-node\",\n          initial: {\n            scale: 0,\n            opacity: 0\n          },\n          animate: {\n            scale: 1,\n            opacity: 1\n          },\n          transition: {\n            delay: index * 0.1,\n            duration: 0.5\n          },\n          whileHover: {\n            scale: 1.1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: node.x,\n          y: node.y + 5,\n          fill: \"white\",\n          fontSize: \"14\",\n          fontWeight: \"700\",\n          textAnchor: \"middle\",\n          className: \"node-label\",\n          children: node.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: node.x + 20,\n          cy: node.y - 20,\n          r: \"8\",\n          fill: \"rgba(255, 107, 107, 0.8)\",\n          stroke: \"white\",\n          strokeWidth: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: node.x + 20,\n          y: node.y - 16,\n          fill: \"white\",\n          fontSize: \"10\",\n          fontWeight: \"600\",\n          textAnchor: \"middle\",\n          children: node.connections.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this)]\n      }, `node-${node.id}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"defs\", {\n        children: /*#__PURE__*/_jsxDEV(\"radialGradient\", {\n          id: \"nodeGradient\",\n          cx: \"30%\",\n          cy: \"30%\",\n          children: [/*#__PURE__*/_jsxDEV(\"stop\", {\n            offset: \"0%\",\n            stopColor: \"rgba(0, 212, 255, 0.3)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"stop\", {\n            offset: \"100%\",\n            stopColor: \"rgba(0, 150, 180, 0.8)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  };\n  const topologyInfo = getCurrentTopologyInfo();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"network-visualization\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"network-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Network Topology Selection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Choose from professionally designed network topologies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-controls\",\n        children: [/*#__PURE__*/_jsxDEV(motion.button, {\n          className: \"control-btn secondary\",\n          onClick: () => setAnimationPaused(!animationPaused),\n          whileHover: {\n            scale: 1.05\n          },\n          whileTap: {\n            scale: 0.95\n          },\n          children: [/*#__PURE__*/_jsxDEV(FiActivity, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), \" \", animationPaused ? 'Resume' : 'Pause', \" Animation\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(motion.button, {\n          className: \"control-btn secondary\",\n          onClick: refreshNetwork,\n          disabled: loading,\n          whileHover: {\n            scale: 1.05\n          },\n          whileTap: {\n            scale: 0.95\n          },\n          children: [/*#__PURE__*/_jsxDEV(FiRefreshCw, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), \" Refresh\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(motion.button, {\n          className: \"control-btn primary\",\n          onClick: saveCurrentNetwork,\n          whileHover: {\n            scale: 1.05\n          },\n          whileTap: {\n            scale: 0.95\n          },\n          children: [/*#__PURE__*/_jsxDEV(FiSave, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), \" Save Network\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"topology-selector\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [/*#__PURE__*/_jsxDEV(FiGrid, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this), \" Available Topologies\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"topology-grid\",\n        children: Object.entries(predefinedTopologies).map(([key, topology]) => /*#__PURE__*/_jsxDEV(motion.div, {\n          className: `topology-card ${currentTopology === key ? 'active' : ''}`,\n          onClick: () => setCurrentTopology(key),\n          whileHover: {\n            scale: 1.02,\n            y: -4\n          },\n          whileTap: {\n            scale: 0.98\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"topology-preview\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `preview-icon ${key}`,\n              children: [key === 'linear' && '━━━━', key === 'star' && '✦', key === 'mesh' && '⬢', key === 'tree' && '🌳']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"topology-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: topology.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: topology.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"topology-stats\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: topology.nodes.length\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 21\n                }, this), \" nodes\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: topology.links.length\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 21\n                }, this), \" links\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"network-display\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"display-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"current-topology-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: topologyInfo.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: topologyInfo.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"network-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: networkData.nodes.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Nodes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: networkData.links.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Links\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: networkData.nodes.reduce((acc, node) => acc + node.connections.length, 0) / 2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Avg Degree\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"network-canvas\",\n        children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-state\",\n          children: [/*#__PURE__*/_jsxDEV(motion.div, {\n            animate: {\n              rotate: 360\n            },\n            transition: {\n              duration: 1,\n              repeat: Infinity,\n              ease: \"linear\"\n            },\n            children: /*#__PURE__*/_jsxDEV(FiRefreshCw, {\n              size: 48\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Loading Network Topology...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Preparing \", topologyInfo.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this) : renderNetwork()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"network-info-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Network Properties\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Topology Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: topologyInfo.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Use Cases\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [currentTopology === 'linear' && 'Basic routing, simple networks', currentTopology === 'star' && 'Centralized systems, hub networks', currentTopology === 'mesh' && 'High availability, redundant paths', currentTopology === 'tree' && 'Hierarchical systems, enterprise networks']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Complexity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [currentTopology === 'linear' && 'Low - Simple chain structure', currentTopology === 'star' && 'Medium - Central hub dependency', currentTopology === 'mesh' && 'High - Multiple interconnections', currentTopology === 'tree' && 'Medium - Hierarchical structure']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n};\n_s(NetworkVisualization, \"cZTMsla73yGga7AASIUXak3Oku0=\");\n_c = NetworkVisualization;\nexport default NetworkVisualization;\nvar _c;\n$RefreshReg$(_c, \"NetworkVisualization\");","map":{"version":3,"names":["React","useState","useEffect","motion","FiRefreshCw","FiSave","FiDownload","FiGrid","FiActivity","axios","predefinedTopologies","jsxDEV","_jsxDEV","NetworkVisualization","_s","currentTopology","setCurrentTopology","networkData","setNetworkData","nodes","links","loading","setLoading","animationPaused","setAnimationPaused","loadTopology","topologyKey","topology","post","data","error","console","saveCurrentNetwork","refreshNetwork","getCurrentTopologyInfo","renderNetwork","length","svgWidth","svgHeight","width","height","className","children","id","patternUnits","d","fill","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","map","link","index","sourceNode","find","n","source","targetNode","target","line","x1","x","y1","y","x2","y2","initial","strokeDasharray","strokeDashoffset","animate","transition","duration","repeat","Infinity","ease","fontSize","fontWeight","textAnchor","cost","node","circle","cx","cy","r","scale","opacity","delay","whileHover","connections","offset","stopColor","topologyInfo","button","onClick","whileTap","disabled","Object","entries","key","div","name","description","reduce","acc","rotate","size","_c","$RefreshReg$"],"sources":["/Users/ayushratan/Desktop/projects/dcnn/Advanced-Protocol-Analysis-Security-Dashboard/frontend/src/components/NetworkVisualization.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { FiRefreshCw, FiSave, FiDownload, FiGrid, FiActivity } from 'react-icons/fi';\nimport axios from 'axios';\nimport './NetworkVisualization.css';\nimport predefinedTopologies from '../topologies';\n\nconst NetworkVisualization = () => {\n  const [currentTopology, setCurrentTopology] = useState('linear');\n  const [networkData, setNetworkData] = useState({ nodes: [], links: [] });\n  const [loading, setLoading] = useState(false);\n  const [animationPaused, setAnimationPaused] = useState(false);\n\n  useEffect(() => {\n    loadTopology(currentTopology);\n  }, [currentTopology]);\n\n  const loadTopology = async (topologyKey) => {\n    setLoading(true);\n    try {\n      const topology = predefinedTopologies[topologyKey];\n      const networkData = {\n        nodes: topology.nodes,\n        links: topology.links\n      };\n      \n      setNetworkData(networkData);\n      \n      // Send to backend\n      await axios.post('/api/network/load-topology', {\n        topology: topologyKey,\n        data: networkData\n      });\n      \n    } catch (error) {\n      console.error('Error loading topology:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const saveCurrentNetwork = async () => {\n    try {\n      await axios.post('/api/network/save', networkData);\n    } catch (error) {\n      console.error('Error saving network:', error);\n    }\n  };\n\n  const refreshNetwork = () => {\n    loadTopology(currentTopology);\n  };\n\n  const getCurrentTopologyInfo = () => {\n    return predefinedTopologies[currentTopology];\n  };\n\n  const renderNetwork = () => {\n    if (!networkData.nodes.length) return null;\n\n    const svgWidth = 800;\n    const svgHeight = 400;\n\n    return (\n      <svg width={svgWidth} height={svgHeight} className=\"network-svg\">\n        {/* Grid Background */}\n        <defs>\n          <pattern id=\"grid\" width=\"40\" height=\"40\" patternUnits=\"userSpaceOnUse\">\n            <path d=\"M 40 0 L 0 0 0 40\" fill=\"none\" stroke=\"rgba(255,255,255,0.1)\" strokeWidth=\"1\"/>\n          </pattern>\n        </defs>\n        <rect width=\"100%\" height=\"100%\" fill=\"url(#grid)\" />\n        \n        {/* Links */}\n        {networkData.links.map((link, index) => {\n          const sourceNode = networkData.nodes.find(n => n.id === link.source);\n          const targetNode = networkData.nodes.find(n => n.id === link.target);\n          \n          if (!sourceNode || !targetNode) return null;\n          \n          return (\n            <g key={`link-${index}`}>\n              <motion.line\n                x1={sourceNode.x}\n                y1={sourceNode.y}\n                x2={targetNode.x}\n                y2={targetNode.y}\n                stroke=\"rgba(0, 212, 255, 0.8)\"\n                strokeWidth=\"3\"\n                className=\"network-link\"\n                initial={{ strokeDasharray: \"5,5\", strokeDashoffset: 10 }}\n                animate={!animationPaused ? { \n                  strokeDashoffset: [10, 0],\n                  stroke: [\"rgba(0, 212, 255, 0.8)\", \"rgba(255, 107, 107, 0.8)\", \"rgba(0, 212, 255, 0.8)\"]\n                } : {}}\n                transition={{ \n                  strokeDashoffset: { duration: 2, repeat: Infinity, ease: \"linear\" },\n                  stroke: { duration: 3, repeat: Infinity, ease: \"easeInOut\" }\n                }}\n              />\n              {/* Cost Label */}\n              <text\n                x={(sourceNode.x + targetNode.x) / 2}\n                y={(sourceNode.y + targetNode.y) / 2 - 10}\n                fill=\"rgba(255, 230, 109, 0.9)\"\n                fontSize=\"12\"\n                fontWeight=\"600\"\n                textAnchor=\"middle\"\n                className=\"cost-label\"\n              >\n                {link.cost}\n              </text>\n            </g>\n          );\n        })}\n        \n        {/* Nodes */}\n        {networkData.nodes.map((node, index) => (\n          <g key={`node-${node.id}`}>\n            <motion.circle\n              cx={node.x}\n              cy={node.y}\n              r=\"25\"\n              fill=\"url(#nodeGradient)\"\n              stroke=\"rgba(0, 212, 255, 0.8)\"\n              strokeWidth=\"3\"\n              className=\"network-node\"\n              initial={{ scale: 0, opacity: 0 }}\n              animate={{ scale: 1, opacity: 1 }}\n              transition={{ delay: index * 0.1, duration: 0.5 }}\n              whileHover={{ scale: 1.1 }}\n            />\n            <text\n              x={node.x}\n              y={node.y + 5}\n              fill=\"white\"\n              fontSize=\"14\"\n              fontWeight=\"700\"\n              textAnchor=\"middle\"\n              className=\"node-label\"\n            >\n              {node.id}\n            </text>\n            \n            {/* Connection count indicator */}\n            <circle\n              cx={node.x + 20}\n              cy={node.y - 20}\n              r=\"8\"\n              fill=\"rgba(255, 107, 107, 0.8)\"\n              stroke=\"white\"\n              strokeWidth=\"2\"\n            />\n            <text\n              x={node.x + 20}\n              y={node.y - 16}\n              fill=\"white\"\n              fontSize=\"10\"\n              fontWeight=\"600\"\n              textAnchor=\"middle\"\n            >\n              {node.connections.length}\n            </text>\n          </g>\n        ))}\n        \n        {/* Gradient Definitions */}\n        <defs>\n          <radialGradient id=\"nodeGradient\" cx=\"30%\" cy=\"30%\">\n            <stop offset=\"0%\" stopColor=\"rgba(0, 212, 255, 0.3)\" />\n            <stop offset=\"100%\" stopColor=\"rgba(0, 150, 180, 0.8)\" />\n          </radialGradient>\n        </defs>\n      </svg>\n    );\n  };\n\n  const topologyInfo = getCurrentTopologyInfo();\n\n  return (\n    <div className=\"network-visualization\">\n      <div className=\"network-header\">\n        <div className=\"header-content\">\n          <h2>Network Topology Selection</h2>\n          <p>Choose from professionally designed network topologies</p>\n        </div>\n        <div className=\"header-controls\">\n          <motion.button\n            className=\"control-btn secondary\"\n            onClick={() => setAnimationPaused(!animationPaused)}\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n          >\n            <FiActivity /> {animationPaused ? 'Resume' : 'Pause'} Animation\n          </motion.button>\n          <motion.button\n            className=\"control-btn secondary\"\n            onClick={refreshNetwork}\n            disabled={loading}\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n          >\n            <FiRefreshCw /> Refresh\n          </motion.button>\n          <motion.button\n            className=\"control-btn primary\"\n            onClick={saveCurrentNetwork}\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n          >\n            <FiSave /> Save Network\n          </motion.button>\n        </div>\n      </div>\n\n      <div className=\"topology-selector\">\n        <h3><FiGrid /> Available Topologies</h3>\n        <div className=\"topology-grid\">\n          {Object.entries(predefinedTopologies).map(([key, topology]) => (\n            <motion.div\n              key={key}\n              className={`topology-card ${currentTopology === key ? 'active' : ''}`}\n              onClick={() => setCurrentTopology(key)}\n              whileHover={{ scale: 1.02, y: -4 }}\n              whileTap={{ scale: 0.98 }}\n            >\n              <div className=\"topology-preview\">\n                <div className={`preview-icon ${key}`}>\n                  {key === 'linear' && '━━━━'}\n                  {key === 'star' && '✦'}\n                  {key === 'mesh' && '⬢'}\n                  {key === 'tree' && '🌳'}\n                </div>\n              </div>\n              <div className=\"topology-info\">\n                <h4>{topology.name}</h4>\n                <p>{topology.description}</p>\n                <div className=\"topology-stats\">\n                  <span className=\"stat\">\n                    <strong>{topology.nodes.length}</strong> nodes\n                  </span>\n                  <span className=\"stat\">\n                    <strong>{topology.links.length}</strong> links\n                  </span>\n                </div>\n              </div>\n            </motion.div>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"network-display\">\n        <div className=\"display-header\">\n          <div className=\"current-topology-info\">\n            <h3>{topologyInfo.name}</h3>\n            <p>{topologyInfo.description}</p>\n          </div>\n          <div className=\"network-stats\">\n            <div className=\"stat-item\">\n              <span className=\"stat-value\">{networkData.nodes.length}</span>\n              <span className=\"stat-label\">Nodes</span>\n            </div>\n            <div className=\"stat-item\">\n              <span className=\"stat-value\">{networkData.links.length}</span>\n              <span className=\"stat-label\">Links</span>\n            </div>\n            <div className=\"stat-item\">\n              <span className=\"stat-value\">\n                {networkData.nodes.reduce((acc, node) => acc + node.connections.length, 0) / 2}\n              </span>\n              <span className=\"stat-label\">Avg Degree</span>\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"network-canvas\">\n          {loading ? (\n            <div className=\"loading-state\">\n              <motion.div\n                animate={{ rotate: 360 }}\n                transition={{ duration: 1, repeat: Infinity, ease: \"linear\" }}\n              >\n                <FiRefreshCw size={48} />\n              </motion.div>\n              <h3>Loading Network Topology...</h3>\n              <p>Preparing {topologyInfo.name}</p>\n            </div>\n          ) : (\n            renderNetwork()\n          )}\n        </div>\n      </div>\n\n      <div className=\"network-info-panel\">\n        <h3>Network Properties</h3>\n        <div className=\"info-grid\">\n          <div className=\"info-card\">\n            <h4>Topology Type</h4>\n            <p>{topologyInfo.name}</p>\n          </div>\n          <div className=\"info-card\">\n            <h4>Use Cases</h4>\n            <p>\n              {currentTopology === 'linear' && 'Basic routing, simple networks'}\n              {currentTopology === 'star' && 'Centralized systems, hub networks'}\n              {currentTopology === 'mesh' && 'High availability, redundant paths'}\n              {currentTopology === 'tree' && 'Hierarchical systems, enterprise networks'}\n            </p>\n          </div>\n          <div className=\"info-card\">\n            <h4>Complexity</h4>\n            <p>\n              {currentTopology === 'linear' && 'Low - Simple chain structure'}\n              {currentTopology === 'star' && 'Medium - Central hub dependency'}\n              {currentTopology === 'mesh' && 'High - Multiple interconnections'}\n              {currentTopology === 'tree' && 'Medium - Hierarchical structure'}\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NetworkVisualization;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,eAAe;AACtC,SAASC,WAAW,EAAEC,MAAM,EAAEC,UAAU,EAAEC,MAAM,EAAEC,UAAU,QAAQ,gBAAgB;AACpF,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,4BAA4B;AACnC,OAAOC,oBAAoB,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGf,QAAQ,CAAC,QAAQ,CAAC;EAChE,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC;IAAEkB,KAAK,EAAE,EAAE;IAAEC,KAAK,EAAE;EAAG,CAAC,CAAC;EACxE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACsB,eAAe,EAAEC,kBAAkB,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EAE7DC,SAAS,CAAC,MAAM;IACduB,YAAY,CAACV,eAAe,CAAC;EAC/B,CAAC,EAAE,CAACA,eAAe,CAAC,CAAC;EAErB,MAAMU,YAAY,GAAG,MAAOC,WAAW,IAAK;IAC1CJ,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMK,QAAQ,GAAGjB,oBAAoB,CAACgB,WAAW,CAAC;MAClD,MAAMT,WAAW,GAAG;QAClBE,KAAK,EAAEQ,QAAQ,CAACR,KAAK;QACrBC,KAAK,EAAEO,QAAQ,CAACP;MAClB,CAAC;MAEDF,cAAc,CAACD,WAAW,CAAC;;MAE3B;MACA,MAAMR,KAAK,CAACmB,IAAI,CAAC,4BAA4B,EAAE;QAC7CD,QAAQ,EAAED,WAAW;QACrBG,IAAI,EAAEZ;MACR,CAAC,CAAC;IAEJ,CAAC,CAAC,OAAOa,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD,CAAC,SAAS;MACRR,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMU,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI;MACF,MAAMvB,KAAK,CAACmB,IAAI,CAAC,mBAAmB,EAAEX,WAAW,CAAC;IACpD,CAAC,CAAC,OAAOa,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAED,MAAMG,cAAc,GAAGA,CAAA,KAAM;IAC3BR,YAAY,CAACV,eAAe,CAAC;EAC/B,CAAC;EAED,MAAMmB,sBAAsB,GAAGA,CAAA,KAAM;IACnC,OAAOxB,oBAAoB,CAACK,eAAe,CAAC;EAC9C,CAAC;EAED,MAAMoB,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAI,CAAClB,WAAW,CAACE,KAAK,CAACiB,MAAM,EAAE,OAAO,IAAI;IAE1C,MAAMC,QAAQ,GAAG,GAAG;IACpB,MAAMC,SAAS,GAAG,GAAG;IAErB,oBACE1B,OAAA;MAAK2B,KAAK,EAAEF,QAAS;MAACG,MAAM,EAAEF,SAAU;MAACG,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAE9D9B,OAAA;QAAA8B,QAAA,eACE9B,OAAA;UAAS+B,EAAE,EAAC,MAAM;UAACJ,KAAK,EAAC,IAAI;UAACC,MAAM,EAAC,IAAI;UAACI,YAAY,EAAC,gBAAgB;UAAAF,QAAA,eACrE9B,OAAA;YAAMiC,CAAC,EAAC,mBAAmB;YAACC,IAAI,EAAC,MAAM;YAACC,MAAM,EAAC,uBAAuB;YAACC,WAAW,EAAC;UAAG;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eACPxC,OAAA;QAAM2B,KAAK,EAAC,MAAM;QAACC,MAAM,EAAC,MAAM;QAACM,IAAI,EAAC;MAAY;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAGpDnC,WAAW,CAACG,KAAK,CAACiC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;QACtC,MAAMC,UAAU,GAAGvC,WAAW,CAACE,KAAK,CAACsC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACf,EAAE,KAAKW,IAAI,CAACK,MAAM,CAAC;QACpE,MAAMC,UAAU,GAAG3C,WAAW,CAACE,KAAK,CAACsC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACf,EAAE,KAAKW,IAAI,CAACO,MAAM,CAAC;QAEpE,IAAI,CAACL,UAAU,IAAI,CAACI,UAAU,EAAE,OAAO,IAAI;QAE3C,oBACEhD,OAAA;UAAA8B,QAAA,gBACE9B,OAAA,CAACT,MAAM,CAAC2D,IAAI;YACVC,EAAE,EAAEP,UAAU,CAACQ,CAAE;YACjBC,EAAE,EAAET,UAAU,CAACU,CAAE;YACjBC,EAAE,EAAEP,UAAU,CAACI,CAAE;YACjBI,EAAE,EAAER,UAAU,CAACM,CAAE;YACjBnB,MAAM,EAAC,wBAAwB;YAC/BC,WAAW,EAAC,GAAG;YACfP,SAAS,EAAC,cAAc;YACxB4B,OAAO,EAAE;cAAEC,eAAe,EAAE,KAAK;cAAEC,gBAAgB,EAAE;YAAG,CAAE;YAC1DC,OAAO,EAAE,CAACjD,eAAe,GAAG;cAC1BgD,gBAAgB,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;cACzBxB,MAAM,EAAE,CAAC,wBAAwB,EAAE,0BAA0B,EAAE,wBAAwB;YACzF,CAAC,GAAG,CAAC,CAAE;YACP0B,UAAU,EAAE;cACVF,gBAAgB,EAAE;gBAAEG,QAAQ,EAAE,CAAC;gBAAEC,MAAM,EAAEC,QAAQ;gBAAEC,IAAI,EAAE;cAAS,CAAC;cACnE9B,MAAM,EAAE;gBAAE2B,QAAQ,EAAE,CAAC;gBAAEC,MAAM,EAAEC,QAAQ;gBAAEC,IAAI,EAAE;cAAY;YAC7D;UAAE;YAAA5B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAEFxC,OAAA;YACEoD,CAAC,EAAE,CAACR,UAAU,CAACQ,CAAC,GAAGJ,UAAU,CAACI,CAAC,IAAI,CAAE;YACrCE,CAAC,EAAE,CAACV,UAAU,CAACU,CAAC,GAAGN,UAAU,CAACM,CAAC,IAAI,CAAC,GAAG,EAAG;YAC1CpB,IAAI,EAAC,0BAA0B;YAC/BgC,QAAQ,EAAC,IAAI;YACbC,UAAU,EAAC,KAAK;YAChBC,UAAU,EAAC,QAAQ;YACnBvC,SAAS,EAAC,YAAY;YAAAC,QAAA,EAErBY,IAAI,CAAC2B;UAAI;YAAAhC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA,GA9BD,QAAQG,KAAK,EAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OA+BpB,CAAC;MAER,CAAC,CAAC,EAGDnC,WAAW,CAACE,KAAK,CAACkC,GAAG,CAAC,CAAC6B,IAAI,EAAE3B,KAAK,kBACjC3C,OAAA;QAAA8B,QAAA,gBACE9B,OAAA,CAACT,MAAM,CAACgF,MAAM;UACZC,EAAE,EAAEF,IAAI,CAAClB,CAAE;UACXqB,EAAE,EAAEH,IAAI,CAAChB,CAAE;UACXoB,CAAC,EAAC,IAAI;UACNxC,IAAI,EAAC,oBAAoB;UACzBC,MAAM,EAAC,wBAAwB;UAC/BC,WAAW,EAAC,GAAG;UACfP,SAAS,EAAC,cAAc;UACxB4B,OAAO,EAAE;YAAEkB,KAAK,EAAE,CAAC;YAAEC,OAAO,EAAE;UAAE,CAAE;UAClChB,OAAO,EAAE;YAAEe,KAAK,EAAE,CAAC;YAAEC,OAAO,EAAE;UAAE,CAAE;UAClCf,UAAU,EAAE;YAAEgB,KAAK,EAAElC,KAAK,GAAG,GAAG;YAAEmB,QAAQ,EAAE;UAAI,CAAE;UAClDgB,UAAU,EAAE;YAAEH,KAAK,EAAE;UAAI;QAAE;UAAAtC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B,CAAC,eACFxC,OAAA;UACEoD,CAAC,EAAEkB,IAAI,CAAClB,CAAE;UACVE,CAAC,EAAEgB,IAAI,CAAChB,CAAC,GAAG,CAAE;UACdpB,IAAI,EAAC,OAAO;UACZgC,QAAQ,EAAC,IAAI;UACbC,UAAU,EAAC,KAAK;UAChBC,UAAU,EAAC,QAAQ;UACnBvC,SAAS,EAAC,YAAY;UAAAC,QAAA,EAErBwC,IAAI,CAACvC;QAAE;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eAGPxC,OAAA;UACEwE,EAAE,EAAEF,IAAI,CAAClB,CAAC,GAAG,EAAG;UAChBqB,EAAE,EAAEH,IAAI,CAAChB,CAAC,GAAG,EAAG;UAChBoB,CAAC,EAAC,GAAG;UACLxC,IAAI,EAAC,0BAA0B;UAC/BC,MAAM,EAAC,OAAO;UACdC,WAAW,EAAC;QAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChB,CAAC,eACFxC,OAAA;UACEoD,CAAC,EAAEkB,IAAI,CAAClB,CAAC,GAAG,EAAG;UACfE,CAAC,EAAEgB,IAAI,CAAChB,CAAC,GAAG,EAAG;UACfpB,IAAI,EAAC,OAAO;UACZgC,QAAQ,EAAC,IAAI;UACbC,UAAU,EAAC,KAAK;UAChBC,UAAU,EAAC,QAAQ;UAAAtC,QAAA,EAElBwC,IAAI,CAACS,WAAW,CAACvD;QAAM;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpB,CAAC;MAAA,GA5CD,QAAQ8B,IAAI,CAACvC,EAAE,EAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OA6CtB,CACJ,CAAC,eAGFxC,OAAA;QAAA8B,QAAA,eACE9B,OAAA;UAAgB+B,EAAE,EAAC,cAAc;UAACyC,EAAE,EAAC,KAAK;UAACC,EAAE,EAAC,KAAK;UAAA3C,QAAA,gBACjD9B,OAAA;YAAMgF,MAAM,EAAC,IAAI;YAACC,SAAS,EAAC;UAAwB;YAAA5C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACvDxC,OAAA;YAAMgF,MAAM,EAAC,MAAM;YAACC,SAAS,EAAC;UAAwB;YAAA5C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAEV,CAAC;EAED,MAAM0C,YAAY,GAAG5D,sBAAsB,CAAC,CAAC;EAE7C,oBACEtB,OAAA;IAAK6B,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACpC9B,OAAA;MAAK6B,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7B9B,OAAA;QAAK6B,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7B9B,OAAA;UAAA8B,QAAA,EAAI;QAA0B;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACnCxC,OAAA;UAAA8B,QAAA,EAAG;QAAsD;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1D,CAAC,eACNxC,OAAA;QAAK6B,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC9B9B,OAAA,CAACT,MAAM,CAAC4F,MAAM;UACZtD,SAAS,EAAC,uBAAuB;UACjCuD,OAAO,EAAEA,CAAA,KAAMxE,kBAAkB,CAAC,CAACD,eAAe,CAAE;UACpDmE,UAAU,EAAE;YAAEH,KAAK,EAAE;UAAK,CAAE;UAC5BU,QAAQ,EAAE;YAAEV,KAAK,EAAE;UAAK,CAAE;UAAA7C,QAAA,gBAE1B9B,OAAA,CAACJ,UAAU;YAAAyC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,KAAC,EAAC7B,eAAe,GAAG,QAAQ,GAAG,OAAO,EAAC,YACvD;QAAA;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAe,CAAC,eAChBxC,OAAA,CAACT,MAAM,CAAC4F,MAAM;UACZtD,SAAS,EAAC,uBAAuB;UACjCuD,OAAO,EAAE/D,cAAe;UACxBiE,QAAQ,EAAE7E,OAAQ;UAClBqE,UAAU,EAAE;YAAEH,KAAK,EAAE;UAAK,CAAE;UAC5BU,QAAQ,EAAE;YAAEV,KAAK,EAAE;UAAK,CAAE;UAAA7C,QAAA,gBAE1B9B,OAAA,CAACR,WAAW;YAAA6C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,YACjB;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAe,CAAC,eAChBxC,OAAA,CAACT,MAAM,CAAC4F,MAAM;UACZtD,SAAS,EAAC,qBAAqB;UAC/BuD,OAAO,EAAEhE,kBAAmB;UAC5B0D,UAAU,EAAE;YAAEH,KAAK,EAAE;UAAK,CAAE;UAC5BU,QAAQ,EAAE;YAAEV,KAAK,EAAE;UAAK,CAAE;UAAA7C,QAAA,gBAE1B9B,OAAA,CAACP,MAAM;YAAA4C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,iBACZ;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAe,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENxC,OAAA;MAAK6B,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAChC9B,OAAA;QAAA8B,QAAA,gBAAI9B,OAAA,CAACL,MAAM;UAAA0C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,yBAAqB;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxCxC,OAAA;QAAK6B,SAAS,EAAC,eAAe;QAAAC,QAAA,EAC3ByD,MAAM,CAACC,OAAO,CAAC1F,oBAAoB,CAAC,CAAC2C,GAAG,CAAC,CAAC,CAACgD,GAAG,EAAE1E,QAAQ,CAAC,kBACxDf,OAAA,CAACT,MAAM,CAACmG,GAAG;UAET7D,SAAS,EAAE,iBAAiB1B,eAAe,KAAKsF,GAAG,GAAG,QAAQ,GAAG,EAAE,EAAG;UACtEL,OAAO,EAAEA,CAAA,KAAMhF,kBAAkB,CAACqF,GAAG,CAAE;UACvCX,UAAU,EAAE;YAAEH,KAAK,EAAE,IAAI;YAAErB,CAAC,EAAE,CAAC;UAAE,CAAE;UACnC+B,QAAQ,EAAE;YAAEV,KAAK,EAAE;UAAK,CAAE;UAAA7C,QAAA,gBAE1B9B,OAAA;YAAK6B,SAAS,EAAC,kBAAkB;YAAAC,QAAA,eAC/B9B,OAAA;cAAK6B,SAAS,EAAE,gBAAgB4D,GAAG,EAAG;cAAA3D,QAAA,GACnC2D,GAAG,KAAK,QAAQ,IAAI,MAAM,EAC1BA,GAAG,KAAK,MAAM,IAAI,GAAG,EACrBA,GAAG,KAAK,MAAM,IAAI,GAAG,EACrBA,GAAG,KAAK,MAAM,IAAI,IAAI;YAAA;cAAApD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACpB;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eACNxC,OAAA;YAAK6B,SAAS,EAAC,eAAe;YAAAC,QAAA,gBAC5B9B,OAAA;cAAA8B,QAAA,EAAKf,QAAQ,CAAC4E;YAAI;cAAAtD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACxBxC,OAAA;cAAA8B,QAAA,EAAIf,QAAQ,CAAC6E;YAAW;cAAAvD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC7BxC,OAAA;cAAK6B,SAAS,EAAC,gBAAgB;cAAAC,QAAA,gBAC7B9B,OAAA;gBAAM6B,SAAS,EAAC,MAAM;gBAAAC,QAAA,gBACpB9B,OAAA;kBAAA8B,QAAA,EAASf,QAAQ,CAACR,KAAK,CAACiB;gBAAM;kBAAAa,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAS,CAAC,UAC1C;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eACPxC,OAAA;gBAAM6B,SAAS,EAAC,MAAM;gBAAAC,QAAA,gBACpB9B,OAAA;kBAAA8B,QAAA,EAASf,QAAQ,CAACP,KAAK,CAACgB;gBAAM;kBAAAa,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAS,CAAC,UAC1C;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA,GAzBDiD,GAAG;UAAApD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OA0BE,CACb;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENxC,OAAA;MAAK6B,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9B9B,OAAA;QAAK6B,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7B9B,OAAA;UAAK6B,SAAS,EAAC,uBAAuB;UAAAC,QAAA,gBACpC9B,OAAA;YAAA8B,QAAA,EAAKoD,YAAY,CAACS;UAAI;YAAAtD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC5BxC,OAAA;YAAA8B,QAAA,EAAIoD,YAAY,CAACU;UAAW;YAAAvD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9B,CAAC,eACNxC,OAAA;UAAK6B,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC5B9B,OAAA;YAAK6B,SAAS,EAAC,WAAW;YAAAC,QAAA,gBACxB9B,OAAA;cAAM6B,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAEzB,WAAW,CAACE,KAAK,CAACiB;YAAM;cAAAa,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC9DxC,OAAA;cAAM6B,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAC;YAAK;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtC,CAAC,eACNxC,OAAA;YAAK6B,SAAS,EAAC,WAAW;YAAAC,QAAA,gBACxB9B,OAAA;cAAM6B,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAEzB,WAAW,CAACG,KAAK,CAACgB;YAAM;cAAAa,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC9DxC,OAAA;cAAM6B,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAC;YAAK;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtC,CAAC,eACNxC,OAAA;YAAK6B,SAAS,EAAC,WAAW;YAAAC,QAAA,gBACxB9B,OAAA;cAAM6B,SAAS,EAAC,YAAY;cAAAC,QAAA,EACzBzB,WAAW,CAACE,KAAK,CAACsF,MAAM,CAAC,CAACC,GAAG,EAAExB,IAAI,KAAKwB,GAAG,GAAGxB,IAAI,CAACS,WAAW,CAACvD,MAAM,EAAE,CAAC,CAAC,GAAG;YAAC;cAAAa,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC1E,CAAC,eACPxC,OAAA;cAAM6B,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAC;YAAU;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAENxC,OAAA;QAAK6B,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAC5BrB,OAAO,gBACNT,OAAA;UAAK6B,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC5B9B,OAAA,CAACT,MAAM,CAACmG,GAAG;YACT9B,OAAO,EAAE;cAAEmC,MAAM,EAAE;YAAI,CAAE;YACzBlC,UAAU,EAAE;cAAEC,QAAQ,EAAE,CAAC;cAAEC,MAAM,EAAEC,QAAQ;cAAEC,IAAI,EAAE;YAAS,CAAE;YAAAnC,QAAA,eAE9D9B,OAAA,CAACR,WAAW;cAACwG,IAAI,EAAE;YAAG;cAAA3D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACf,CAAC,eACbxC,OAAA;YAAA8B,QAAA,EAAI;UAA2B;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACpCxC,OAAA;YAAA8B,QAAA,GAAG,YAAU,EAACoD,YAAY,CAACS,IAAI;UAAA;YAAAtD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjC,CAAC,GAENjB,aAAa,CAAC;MACf;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENxC,OAAA;MAAK6B,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBACjC9B,OAAA;QAAA8B,QAAA,EAAI;MAAkB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3BxC,OAAA;QAAK6B,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACxB9B,OAAA;UAAK6B,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxB9B,OAAA;YAAA8B,QAAA,EAAI;UAAa;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACtBxC,OAAA;YAAA8B,QAAA,EAAIoD,YAAY,CAACS;UAAI;YAAAtD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvB,CAAC,eACNxC,OAAA;UAAK6B,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxB9B,OAAA;YAAA8B,QAAA,EAAI;UAAS;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAClBxC,OAAA;YAAA8B,QAAA,GACG3B,eAAe,KAAK,QAAQ,IAAI,gCAAgC,EAChEA,eAAe,KAAK,MAAM,IAAI,mCAAmC,EACjEA,eAAe,KAAK,MAAM,IAAI,oCAAoC,EAClEA,eAAe,KAAK,MAAM,IAAI,2CAA2C;UAAA;YAAAkC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACNxC,OAAA;UAAK6B,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxB9B,OAAA;YAAA8B,QAAA,EAAI;UAAU;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACnBxC,OAAA;YAAA8B,QAAA,GACG3B,eAAe,KAAK,QAAQ,IAAI,8BAA8B,EAC9DA,eAAe,KAAK,MAAM,IAAI,iCAAiC,EAC/DA,eAAe,KAAK,MAAM,IAAI,kCAAkC,EAChEA,eAAe,KAAK,MAAM,IAAI,iCAAiC;UAAA;YAAAkC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/D,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACtC,EAAA,CA3TID,oBAAoB;AAAAgG,EAAA,GAApBhG,oBAAoB;AA6T1B,eAAeA,oBAAoB;AAAC,IAAAgG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}