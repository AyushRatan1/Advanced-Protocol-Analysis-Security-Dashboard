{"ast":null,"code":"import React,{useState,useEffect}from'react';import{motion}from'framer-motion';import{FiNavigation,FiRefreshCw,FiMapPin,FiTarget,FiPlay}from'react-icons/fi';import axios from'axios';import'./RIPTab.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const RIPTab=()=>{const[networkData,setNetworkData]=useState({nodes:[],links:[]});const[sourceNode,setSourceNode]=useState('A');const[destNode,setDestNode]=useState('F');const[shortestPath,setShortestPath]=useState(null);const[loading,setLoading]=useState(false);const[error,setError]=useState('');const[selectedNode,setSelectedNode]=useState(null);useEffect(()=>{fetchNetworkData();},[]);const fetchNetworkData=async()=>{try{setLoading(true);const response=await axios.get('/api/rip/network');if(response.data.success){setNetworkData(response.data);}else{setError('Failed to fetch network data');}}catch(err){setError('Error connecting to API');console.error('Network fetch error:',err);}finally{setLoading(false);}};const findShortestPath=async()=>{if(!sourceNode||!destNode){setError('Please select both source and destination nodes');return;}if(sourceNode===destNode){setError('Source and destination cannot be the same');return;}setLoading(true);setError('');try{const response=await axios.post('/api/rip/shortest-path',{source:sourceNode,destination:destNode});if(response.data.success){setShortestPath(response.data);}else{setError(response.data.error||'Failed to find path');}}catch(err){setError('Error connecting to API');console.error('Path finding error:',err);}finally{setLoading(false);}};const getNodeInfo=nodeId=>{return networkData.nodes.find(node=>node.id===nodeId);};const availableNodes=['A','B','C','D','E','F'];return/*#__PURE__*/_jsxs(\"div\",{className:\"rip-tab\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"tab-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"header-content\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"RIP Routing Protocol\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Routing Information Protocol - Distance Vector Algorithm\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"header-actions\",children:/*#__PURE__*/_jsxs(motion.button,{className:\"action-btn secondary\",onClick:fetchNetworkData,whileHover:{scale:1.05},whileTap:{scale:0.95},children:[/*#__PURE__*/_jsx(FiRefreshCw,{}),\" Refresh Network\"]})})]}),error&&/*#__PURE__*/_jsx(motion.div,{className:\"error-message\",initial:{opacity:0,y:-10},animate:{opacity:1,y:0},children:error}),/*#__PURE__*/_jsxs(\"div\",{className:\"rip-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"routing-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"path-finder\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Find Shortest Path\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"path-controls\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"node-selector\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(FiMapPin,{}),\" Source Node\"]}),/*#__PURE__*/_jsx(\"select\",{value:sourceNode,onChange:e=>setSourceNode(e.target.value),className:\"cyber-select\",children:availableNodes.map(node=>/*#__PURE__*/_jsxs(\"option\",{value:node,children:[\"Node \",node]},node))})]}),/*#__PURE__*/_jsx(\"div\",{className:\"path-arrow\",children:/*#__PURE__*/_jsx(FiNavigation,{})}),/*#__PURE__*/_jsxs(\"div\",{className:\"node-selector\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(FiTarget,{}),\" Destination Node\"]}),/*#__PURE__*/_jsx(\"select\",{value:destNode,onChange:e=>setDestNode(e.target.value),className:\"cyber-select\",children:availableNodes.map(node=>/*#__PURE__*/_jsxs(\"option\",{value:node,children:[\"Node \",node]},node))})]}),/*#__PURE__*/_jsx(motion.button,{className:\"action-btn primary\",onClick:findShortestPath,disabled:loading,whileHover:{scale:loading?1:1.05},whileTap:{scale:loading?1:0.95},children:loading?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(motion.div,{animate:{rotate:360},transition:{duration:1,repeat:Infinity,ease:\"linear\"},children:/*#__PURE__*/_jsx(FiRefreshCw,{})}),\"Finding...\"]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(FiPlay,{}),\" Find Path\"]})})]}),shortestPath&&/*#__PURE__*/_jsxs(motion.div,{className:\"path-result\",initial:{opacity:0,y:20},animate:{opacity:1,y:0},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"result-header\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Shortest Path Found\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"path-stats\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"stat\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Hops:\"}),\" \",shortestPath.path?shortestPath.path.length-1:0]}),/*#__PURE__*/_jsxs(\"span\",{className:\"stat\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Total Cost:\"}),\" \",shortestPath.cost]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"path-visualization\",children:shortestPath.path&&shortestPath.path.map((node,index)=>/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(motion.div,{className:\"path-node\",initial:{scale:0},animate:{scale:1},transition:{delay:index*0.1},children:node}),index<shortestPath.path.length-1&&/*#__PURE__*/_jsx(motion.div,{className:\"path-arrow-viz\",initial:{opacity:0},animate:{opacity:1},transition:{delay:index*0.1+0.05},children:\"\\u2192\"})]},node))})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"network-topology\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Network Topology\"}),/*#__PURE__*/_jsx(\"div\",{className:\"topology-grid\",children:networkData.links.map((link,index)=>/*#__PURE__*/_jsxs(motion.div,{className:\"link-info\",initial:{opacity:0,x:-20},animate:{opacity:1,x:0},transition:{delay:index*0.1},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"link-nodes\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"node\",children:link.source}),/*#__PURE__*/_jsx(\"span\",{className:\"connector\",children:\"\\u2194\"}),/*#__PURE__*/_jsx(\"span\",{className:\"node\",children:link.target})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"link-distance\",children:[\"Distance: \",/*#__PURE__*/_jsx(\"strong\",{children:link.distance})]})]},\"\".concat(link.source,\"-\").concat(link.target)))})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"routing-tables\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Routing Tables\"}),/*#__PURE__*/_jsx(\"div\",{className:\"tables-grid\",children:networkData.nodes.map((node,index)=>/*#__PURE__*/_jsxs(motion.div,{className:\"routing-table \".concat(selectedNode===node.id?'active':''),initial:{opacity:0,y:20},animate:{opacity:1,y:0},transition:{delay:index*0.1},onClick:()=>setSelectedNode(selectedNode===node.id?null:node.id),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"table-header\",children:[/*#__PURE__*/_jsxs(\"h4\",{children:[\"Node \",node.id]}),/*#__PURE__*/_jsx(\"div\",{className:\"node-stats\",children:/*#__PURE__*/_jsxs(\"span\",{children:[node.neighbors.length,\" neighbors\"]})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"table-content\",children:/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Dest\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Next Hop\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Distance\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:Object.entries(node.routing_table).map(_ref=>{let[dest,info]=_ref;return/*#__PURE__*/_jsxs(\"tr\",{className:dest===node.id?'self-row':'',children:[/*#__PURE__*/_jsx(\"td\",{className:\"dest-cell\",children:dest}),/*#__PURE__*/_jsx(\"td\",{className:\"hop-cell\",children:info.next_hop||'-'}),/*#__PURE__*/_jsx(\"td\",{className:\"distance-cell\",children:/*#__PURE__*/_jsx(\"span\",{className:\"distance \".concat(info.distance===0?'self':info.distance===-1?'infinite':'normal'),children:info.distance===-1?'âˆž':info.distance})})]},dest);})})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"neighbors-info\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Direct Neighbors:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"neighbors-list\",children:node.neighbors.map(neighbor=>/*#__PURE__*/_jsx(\"span\",{className:\"neighbor-tag\",children:neighbor},neighbor))})]})]},node.id))})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"rip-info\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"RIP Algorithm Overview\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-cards\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"info-card\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Distance Vector\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Each node maintains a routing table with the distance to every other node in the network.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-card\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Bellman-Ford\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Uses the Bellman-Ford algorithm to find shortest paths and detect routing loops.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-card\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Periodic Updates\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Nodes periodically share their distance vectors with immediate neighbors.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-card\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Convergence\"}),/*#__PURE__*/_jsx(\"p\",{children:\"The network converges to optimal routing paths after several update iterations.\"})]})]})]})]});};export default RIPTab;","map":{"version":3,"names":["React","useState","useEffect","motion","FiNavigation","FiRefreshCw","FiMapPin","FiTarget","FiPlay","axios","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","RIPTab","networkData","setNetworkData","nodes","links","sourceNode","setSourceNode","destNode","setDestNode","shortestPath","setShortestPath","loading","setLoading","error","setError","selectedNode","setSelectedNode","fetchNetworkData","response","get","data","success","err","console","findShortestPath","post","source","destination","getNodeInfo","nodeId","find","node","id","availableNodes","className","children","button","onClick","whileHover","scale","whileTap","div","initial","opacity","y","animate","value","onChange","e","target","map","disabled","rotate","transition","duration","repeat","Infinity","ease","path","length","cost","index","delay","link","x","distance","concat","neighbors","Object","entries","routing_table","_ref","dest","info","next_hop","neighbor"],"sources":["/Users/ayushratan/Desktop/projects/dcn/frontend/src/components/tabs/RIPTab.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { FiNavigation, FiRefreshCw, FiMapPin, FiTarget, FiPlay } from 'react-icons/fi';\nimport axios from 'axios';\nimport './RIPTab.css';\n\nconst RIPTab = () => {\n  const [networkData, setNetworkData] = useState({ nodes: [], links: [] });\n  const [sourceNode, setSourceNode] = useState('A');\n  const [destNode, setDestNode] = useState('F');\n  const [shortestPath, setShortestPath] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [selectedNode, setSelectedNode] = useState(null);\n\n  useEffect(() => {\n    fetchNetworkData();\n  }, []);\n\n  const fetchNetworkData = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get('/api/rip/network');\n      if (response.data.success) {\n        setNetworkData(response.data);\n      } else {\n        setError('Failed to fetch network data');\n      }\n    } catch (err) {\n      setError('Error connecting to API');\n      console.error('Network fetch error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const findShortestPath = async () => {\n    if (!sourceNode || !destNode) {\n      setError('Please select both source and destination nodes');\n      return;\n    }\n\n    if (sourceNode === destNode) {\n      setError('Source and destination cannot be the same');\n      return;\n    }\n\n    setLoading(true);\n    setError('');\n\n    try {\n      const response = await axios.post('/api/rip/shortest-path', {\n        source: sourceNode,\n        destination: destNode\n      });\n\n      if (response.data.success) {\n        setShortestPath(response.data);\n      } else {\n        setError(response.data.error || 'Failed to find path');\n      }\n    } catch (err) {\n      setError('Error connecting to API');\n      console.error('Path finding error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getNodeInfo = (nodeId) => {\n    return networkData.nodes.find(node => node.id === nodeId);\n  };\n\n  const availableNodes = ['A', 'B', 'C', 'D', 'E', 'F'];\n\n  return (\n    <div className=\"rip-tab\">\n      <div className=\"tab-header\">\n        <div className=\"header-content\">\n          <h2>RIP Routing Protocol</h2>\n          <p>Routing Information Protocol - Distance Vector Algorithm</p>\n        </div>\n        <div className=\"header-actions\">\n          <motion.button\n            className=\"action-btn secondary\"\n            onClick={fetchNetworkData}\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n          >\n            <FiRefreshCw /> Refresh Network\n          </motion.button>\n        </div>\n      </div>\n\n      {error && (\n        <motion.div \n          className=\"error-message\"\n          initial={{ opacity: 0, y: -10 }}\n          animate={{ opacity: 1, y: 0 }}\n        >\n          {error}\n        </motion.div>\n      )}\n\n      <div className=\"rip-content\">\n        <div className=\"routing-section\">\n          <div className=\"path-finder\">\n            <h3>Find Shortest Path</h3>\n            <div className=\"path-controls\">\n              <div className=\"node-selector\">\n                <label>\n                  <FiMapPin /> Source Node\n                </label>\n                <select\n                  value={sourceNode}\n                  onChange={(e) => setSourceNode(e.target.value)}\n                  className=\"cyber-select\"\n                >\n                  {availableNodes.map(node => (\n                    <option key={node} value={node}>Node {node}</option>\n                  ))}\n                </select>\n              </div>\n\n              <div className=\"path-arrow\">\n                <FiNavigation />\n              </div>\n\n              <div className=\"node-selector\">\n                <label>\n                  <FiTarget /> Destination Node\n                </label>\n                <select\n                  value={destNode}\n                  onChange={(e) => setDestNode(e.target.value)}\n                  className=\"cyber-select\"\n                >\n                  {availableNodes.map(node => (\n                    <option key={node} value={node}>Node {node}</option>\n                  ))}\n                </select>\n              </div>\n\n              <motion.button\n                className=\"action-btn primary\"\n                onClick={findShortestPath}\n                disabled={loading}\n                whileHover={{ scale: loading ? 1 : 1.05 }}\n                whileTap={{ scale: loading ? 1 : 0.95 }}\n              >\n                {loading ? (\n                  <>\n                    <motion.div\n                      animate={{ rotate: 360 }}\n                      transition={{ duration: 1, repeat: Infinity, ease: \"linear\" }}\n                    >\n                      <FiRefreshCw />\n                    </motion.div>\n                    Finding...\n                  </>\n                ) : (\n                  <>\n                    <FiPlay /> Find Path\n                  </>\n                )}\n              </motion.button>\n            </div>\n\n            {shortestPath && (\n              <motion.div \n                className=\"path-result\"\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n              >\n                <div className=\"result-header\">\n                  <h4>Shortest Path Found</h4>\n                  <div className=\"path-stats\">\n                    <span className=\"stat\">\n                      <strong>Hops:</strong> {shortestPath.path ? shortestPath.path.length - 1 : 0}\n                    </span>\n                    <span className=\"stat\">\n                      <strong>Total Cost:</strong> {shortestPath.cost}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"path-visualization\">\n                  {shortestPath.path && shortestPath.path.map((node, index) => (\n                    <React.Fragment key={node}>\n                      <motion.div\n                        className=\"path-node\"\n                        initial={{ scale: 0 }}\n                        animate={{ scale: 1 }}\n                        transition={{ delay: index * 0.1 }}\n                      >\n                        {node}\n                      </motion.div>\n                      {index < shortestPath.path.length - 1 && (\n                        <motion.div\n                          className=\"path-arrow-viz\"\n                          initial={{ opacity: 0 }}\n                          animate={{ opacity: 1 }}\n                          transition={{ delay: index * 0.1 + 0.05 }}\n                        >\n                          â†’\n                        </motion.div>\n                      )}\n                    </React.Fragment>\n                  ))}\n                </div>\n              </motion.div>\n            )}\n          </div>\n\n          <div className=\"network-topology\">\n            <h3>Network Topology</h3>\n            <div className=\"topology-grid\">\n              {networkData.links.map((link, index) => (\n                <motion.div\n                  key={`${link.source}-${link.target}`}\n                  className=\"link-info\"\n                  initial={{ opacity: 0, x: -20 }}\n                  animate={{ opacity: 1, x: 0 }}\n                  transition={{ delay: index * 0.1 }}\n                >\n                  <div className=\"link-nodes\">\n                    <span className=\"node\">{link.source}</span>\n                    <span className=\"connector\">â†”</span>\n                    <span className=\"node\">{link.target}</span>\n                  </div>\n                  <div className=\"link-distance\">\n                    Distance: <strong>{link.distance}</strong>\n                  </div>\n                </motion.div>\n              ))}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"routing-tables\">\n          <h3>Routing Tables</h3>\n          <div className=\"tables-grid\">\n            {networkData.nodes.map((node, index) => (\n              <motion.div\n                key={node.id}\n                className={`routing-table ${selectedNode === node.id ? 'active' : ''}`}\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ delay: index * 0.1 }}\n                onClick={() => setSelectedNode(selectedNode === node.id ? null : node.id)}\n              >\n                <div className=\"table-header\">\n                  <h4>Node {node.id}</h4>\n                  <div className=\"node-stats\">\n                    <span>{node.neighbors.length} neighbors</span>\n                  </div>\n                </div>\n                \n                <div className=\"table-content\">\n                  <table>\n                    <thead>\n                      <tr>\n                        <th>Dest</th>\n                        <th>Next Hop</th>\n                        <th>Distance</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {Object.entries(node.routing_table).map(([dest, info]) => (\n                        <tr key={dest} className={dest === node.id ? 'self-row' : ''}>\n                          <td className=\"dest-cell\">{dest}</td>\n                          <td className=\"hop-cell\">{info.next_hop || '-'}</td>\n                          <td className=\"distance-cell\">\n                            <span className={`distance ${info.distance === 0 ? 'self' : info.distance === -1 ? 'infinite' : 'normal'}`}>\n                              {info.distance === -1 ? 'âˆž' : info.distance}\n                            </span>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n\n                <div className=\"neighbors-info\">\n                  <strong>Direct Neighbors:</strong>\n                  <div className=\"neighbors-list\">\n                    {node.neighbors.map(neighbor => (\n                      <span key={neighbor} className=\"neighbor-tag\">{neighbor}</span>\n                    ))}\n                  </div>\n                </div>\n              </motion.div>\n            ))}\n          </div>\n        </div>\n      </div>\n\n      <div className=\"rip-info\">\n        <h3>RIP Algorithm Overview</h3>\n        <div className=\"info-cards\">\n          <div className=\"info-card\">\n            <h4>Distance Vector</h4>\n            <p>Each node maintains a routing table with the distance to every other node in the network.</p>\n          </div>\n          <div className=\"info-card\">\n            <h4>Bellman-Ford</h4>\n            <p>Uses the Bellman-Ford algorithm to find shortest paths and detect routing loops.</p>\n          </div>\n          <div className=\"info-card\">\n            <h4>Periodic Updates</h4>\n            <p>Nodes periodically share their distance vectors with immediate neighbors.</p>\n          </div>\n          <div className=\"info-card\">\n            <h4>Convergence</h4>\n            <p>The network converges to optimal routing paths after several update iterations.</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RIPTab;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}