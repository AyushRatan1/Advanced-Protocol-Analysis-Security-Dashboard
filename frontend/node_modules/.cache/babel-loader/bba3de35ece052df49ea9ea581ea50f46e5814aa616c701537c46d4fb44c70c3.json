{"ast":null,"code":"var _jsxFileName = \"/Users/ayushratan/Desktop/projects/dcn/frontend/src/components/NetworkVisualization.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { motion } from 'framer-motion';\nimport { FiRefreshCw, FiPlay, FiPause, FiSettings } from 'react-icons/fi';\nimport axios from 'axios';\nimport './NetworkVisualization.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NetworkVisualization = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const [networkData, setNetworkData] = useState({\n    nodes: [],\n    links: []\n  });\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [isAnimating, setIsAnimating] = useState(true);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Network positions for nodes A-F\n  const nodePositions = {\n    'A': {\n      x: 150,\n      y: 200\n    },\n    'B': {\n      x: 300,\n      y: 150\n    },\n    'C': {\n      x: 150,\n      y: 350\n    },\n    'D': {\n      x: 400,\n      y: 250\n    },\n    'E': {\n      x: 300,\n      y: 400\n    },\n    'F': {\n      x: 550,\n      y: 300\n    }\n  };\n  useEffect(() => {\n    fetchNetworkData();\n  }, []);\n  useEffect(() => {\n    if (networkData.nodes.length > 0) {\n      drawNetwork();\n    }\n  }, [networkData, selectedNode, isAnimating]);\n  const fetchNetworkData = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get('/api/rip/network');\n      if (response.data.success) {\n        setNetworkData(response.data);\n      } else {\n        setError('Failed to fetch network data');\n      }\n    } catch (err) {\n      setError('Error connecting to API');\n      console.error('Network fetch error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const drawNetwork = () => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    const rect = canvas.getBoundingClientRect();\n    canvas.width = rect.width;\n    canvas.height = rect.height;\n\n    // Clear canvas\n    ctx.fillStyle = 'rgba(10, 10, 15, 0.9)';\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n    // Draw grid\n    drawGrid(ctx, canvas.width, canvas.height);\n\n    // Draw links first (so they appear behind nodes)\n    networkData.links.forEach(link => {\n      drawLink(ctx, link);\n    });\n\n    // Draw nodes\n    networkData.nodes.forEach(node => {\n      drawNode(ctx, node);\n    });\n\n    // Draw node labels\n    networkData.nodes.forEach(node => {\n      drawNodeLabel(ctx, node);\n    });\n  };\n  const drawGrid = (ctx, width, height) => {\n    ctx.strokeStyle = 'rgba(0, 212, 255, 0.1)';\n    ctx.lineWidth = 1;\n    for (let x = 0; x < width; x += 30) {\n      ctx.beginPath();\n      ctx.moveTo(x, 0);\n      ctx.lineTo(x, height);\n      ctx.stroke();\n    }\n    for (let y = 0; y < height; y += 30) {\n      ctx.beginPath();\n      ctx.moveTo(0, y);\n      ctx.lineTo(width, y);\n      ctx.stroke();\n    }\n  };\n  const drawLink = (ctx, link) => {\n    const sourcePos = nodePositions[link.source];\n    const targetPos = nodePositions[link.target];\n    if (!sourcePos || !targetPos) return;\n    ctx.strokeStyle = selectedNode === link.source || selectedNode === link.target ? '#00d4ff' : 'rgba(0, 212, 255, 0.4)';\n    ctx.lineWidth = selectedNode === link.source || selectedNode === link.target ? 3 : 2;\n\n    // Draw animated line\n    ctx.beginPath();\n    ctx.moveTo(sourcePos.x, sourcePos.y);\n    ctx.lineTo(targetPos.x, targetPos.y);\n    ctx.stroke();\n\n    // Draw distance label\n    const midX = (sourcePos.x + targetPos.x) / 2;\n    const midY = (sourcePos.y + targetPos.y) / 2;\n    ctx.fillStyle = '#ffe66d';\n    ctx.font = '12px JetBrains Mono';\n    ctx.textAlign = 'center';\n    ctx.fillText(link.distance.toString(), midX, midY - 5);\n\n    // Draw data flow animation\n    if (isAnimating) {\n      drawDataFlow(ctx, sourcePos, targetPos);\n    }\n  };\n  const drawDataFlow = (ctx, source, target) => {\n    const time = Date.now() * 0.003;\n    const progress = (Math.sin(time) + 1) / 2;\n    const x = source.x + (target.x - source.x) * progress;\n    const y = source.y + (target.y - source.y) * progress;\n    ctx.fillStyle = '#4ecdc4';\n    ctx.beginPath();\n    ctx.arc(x, y, 3, 0, Math.PI * 2);\n    ctx.fill();\n    ctx.shadowColor = '#4ecdc4';\n    ctx.shadowBlur = 10;\n    ctx.fill();\n    ctx.shadowBlur = 0;\n  };\n  const drawNode = (ctx, node) => {\n    const pos = nodePositions[node.id];\n    if (!pos) return;\n    const isSelected = selectedNode === node.id;\n    const time = Date.now() * 0.002;\n    const pulse = Math.sin(time) * 0.1 + 1;\n\n    // Draw node glow\n    if (isSelected || isAnimating) {\n      ctx.shadowColor = '#00d4ff';\n      ctx.shadowBlur = 20 * pulse;\n    }\n\n    // Draw main node\n    ctx.fillStyle = isSelected ? '#00d4ff' : '#ff6b6b';\n    ctx.beginPath();\n    ctx.arc(pos.x, pos.y, isSelected ? 25 * pulse : 20, 0, Math.PI * 2);\n    ctx.fill();\n    ctx.shadowBlur = 0;\n\n    // Draw inner circle\n    ctx.fillStyle = isSelected ? 'rgba(255, 255, 255, 0.8)' : 'rgba(255, 255, 255, 0.6)';\n    ctx.beginPath();\n    ctx.arc(pos.x, pos.y, isSelected ? 15 : 12, 0, Math.PI * 2);\n    ctx.fill();\n\n    // Draw node border\n    ctx.strokeStyle = isSelected ? '#ffffff' : 'rgba(255, 255, 255, 0.3)';\n    ctx.lineWidth = 2;\n    ctx.beginPath();\n    ctx.arc(pos.x, pos.y, isSelected ? 25 * pulse : 20, 0, Math.PI * 2);\n    ctx.stroke();\n  };\n  const drawNodeLabel = (ctx, node) => {\n    const pos = nodePositions[node.id];\n    if (!pos) return;\n    ctx.fillStyle = '#ffffff';\n    ctx.font = 'bold 16px Inter';\n    ctx.textAlign = 'center';\n    ctx.fillText(node.id, pos.x, pos.y + 5);\n  };\n  const handleCanvasClick = event => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n\n    // Check if click is on a node\n    let clickedNode = null;\n    for (const node of networkData.nodes) {\n      const pos = nodePositions[node.id];\n      if (pos) {\n        const distance = Math.sqrt((x - pos.x) ** 2 + (y - pos.y) ** 2);\n        if (distance <= 25) {\n          clickedNode = node.id;\n          break;\n        }\n      }\n    }\n    setSelectedNode(clickedNode);\n  };\n  const getSelectedNodeInfo = () => {\n    if (!selectedNode) return null;\n    return networkData.nodes.find(node => node.id === selectedNode);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"network-loading\",\n      children: [/*#__PURE__*/_jsxDEV(motion.div, {\n        animate: {\n          rotate: 360\n        },\n        transition: {\n          duration: 2,\n          repeat: Infinity,\n          ease: \"linear\"\n        },\n        children: /*#__PURE__*/_jsxDEV(FiRefreshCw, {\n          size: 40\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading network topology...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"network-error\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchNetworkData,\n        className: \"retry-button\",\n        children: [/*#__PURE__*/_jsxDEV(FiRefreshCw, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), \" Retry\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this);\n  }\n  const selectedNodeInfo = getSelectedNodeInfo();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"network-visualization\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"network-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Network Topology Overview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"network-controls\",\n        children: [/*#__PURE__*/_jsxDEV(motion.button, {\n          className: `control-button ${isAnimating ? 'active' : ''}`,\n          onClick: () => setIsAnimating(!isAnimating),\n          whileHover: {\n            scale: 1.05\n          },\n          whileTap: {\n            scale: 0.95\n          },\n          children: isAnimating ? /*#__PURE__*/_jsxDEV(FiPause, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 28\n          }, this) : /*#__PURE__*/_jsxDEV(FiPlay, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(motion.button, {\n          className: \"control-button\",\n          onClick: fetchNetworkData,\n          whileHover: {\n            scale: 1.05\n          },\n          whileTap: {\n            scale: 0.95\n          },\n          children: /*#__PURE__*/_jsxDEV(FiRefreshCw, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(motion.button, {\n          className: \"control-button\",\n          whileHover: {\n            scale: 1.05\n          },\n          whileTap: {\n            scale: 0.95\n          },\n          children: /*#__PURE__*/_jsxDEV(FiSettings, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"network-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"network-canvas-container\",\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          className: \"network-canvas\",\n          onClick: handleCanvasClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"network-sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"network-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Network Statistics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-grid\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-box\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: networkData.nodes.length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Nodes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-box\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: networkData.links.length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Links\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this), selectedNodeInfo && /*#__PURE__*/_jsxDEV(motion.div, {\n          className: \"node-details\",\n          initial: {\n            opacity: 0,\n            y: 20\n          },\n          animate: {\n            opacity: 1,\n            y: 0\n          },\n          transition: {\n            duration: 0.3\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Node \", selectedNodeInfo.id, \" Details\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"node-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Neighbors:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 20\n              }, this), \" \", selectedNodeInfo.neighbors.join(', ')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"routing-table\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Routing Table\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"table-container\",\n                children: /*#__PURE__*/_jsxDEV(\"table\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Dest\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 322,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Next Hop\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 323,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Distance\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 324,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 321,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 320,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                    children: Object.entries(selectedNodeInfo.routing_table).map(([dest, info]) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        children: dest\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 330,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: info.next_hop || '-'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 331,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: info.distance === -1 ? '∞' : info.distance\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 332,\n                        columnNumber: 29\n                      }, this)]\n                    }, dest, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 329,\n                      columnNumber: 27\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 327,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 252,\n    columnNumber: 5\n  }, this);\n};\n_s(NetworkVisualization, \"XfZJVBQvmWrJR51IgFUkHMEHSOU=\");\n_c = NetworkVisualization;\nexport default NetworkVisualization;\nvar _c;\n$RefreshReg$(_c, \"NetworkVisualization\");","map":{"version":3,"names":["React","useState","useEffect","useRef","motion","FiRefreshCw","FiPlay","FiPause","FiSettings","axios","jsxDEV","_jsxDEV","NetworkVisualization","_s","canvasRef","networkData","setNetworkData","nodes","links","selectedNode","setSelectedNode","isAnimating","setIsAnimating","loading","setLoading","error","setError","nodePositions","x","y","fetchNetworkData","length","drawNetwork","response","get","data","success","err","console","canvas","current","ctx","getContext","rect","getBoundingClientRect","width","height","fillStyle","fillRect","drawGrid","forEach","link","drawLink","node","drawNode","drawNodeLabel","strokeStyle","lineWidth","beginPath","moveTo","lineTo","stroke","sourcePos","source","targetPos","target","midX","midY","font","textAlign","fillText","distance","toString","drawDataFlow","time","Date","now","progress","Math","sin","arc","PI","fill","shadowColor","shadowBlur","pos","id","isSelected","pulse","handleCanvasClick","event","clientX","left","clientY","top","clickedNode","sqrt","getSelectedNodeInfo","find","className","children","div","animate","rotate","transition","duration","repeat","Infinity","ease","size","fileName","_jsxFileName","lineNumber","columnNumber","onClick","selectedNodeInfo","button","whileHover","scale","whileTap","ref","initial","opacity","neighbors","join","Object","entries","routing_table","map","dest","info","next_hop","_c","$RefreshReg$"],"sources":["/Users/ayushratan/Desktop/projects/dcn/frontend/src/components/NetworkVisualization.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { motion } from 'framer-motion';\nimport { FiRefreshCw, FiPlay, FiPause, FiSettings } from 'react-icons/fi';\nimport axios from 'axios';\nimport './NetworkVisualization.css';\n\nconst NetworkVisualization = () => {\n  const canvasRef = useRef(null);\n  const [networkData, setNetworkData] = useState({ nodes: [], links: [] });\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [isAnimating, setIsAnimating] = useState(true);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Network positions for nodes A-F\n  const nodePositions = {\n    'A': { x: 150, y: 200 },\n    'B': { x: 300, y: 150 },\n    'C': { x: 150, y: 350 },\n    'D': { x: 400, y: 250 },\n    'E': { x: 300, y: 400 },\n    'F': { x: 550, y: 300 }\n  };\n\n  useEffect(() => {\n    fetchNetworkData();\n  }, []);\n\n  useEffect(() => {\n    if (networkData.nodes.length > 0) {\n      drawNetwork();\n    }\n  }, [networkData, selectedNode, isAnimating]);\n\n  const fetchNetworkData = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get('/api/rip/network');\n      if (response.data.success) {\n        setNetworkData(response.data);\n      } else {\n        setError('Failed to fetch network data');\n      }\n    } catch (err) {\n      setError('Error connecting to API');\n      console.error('Network fetch error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const drawNetwork = () => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    const rect = canvas.getBoundingClientRect();\n    canvas.width = rect.width;\n    canvas.height = rect.height;\n\n    // Clear canvas\n    ctx.fillStyle = 'rgba(10, 10, 15, 0.9)';\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n    // Draw grid\n    drawGrid(ctx, canvas.width, canvas.height);\n\n    // Draw links first (so they appear behind nodes)\n    networkData.links.forEach(link => {\n      drawLink(ctx, link);\n    });\n\n    // Draw nodes\n    networkData.nodes.forEach(node => {\n      drawNode(ctx, node);\n    });\n\n    // Draw node labels\n    networkData.nodes.forEach(node => {\n      drawNodeLabel(ctx, node);\n    });\n  };\n\n  const drawGrid = (ctx, width, height) => {\n    ctx.strokeStyle = 'rgba(0, 212, 255, 0.1)';\n    ctx.lineWidth = 1;\n    \n    for (let x = 0; x < width; x += 30) {\n      ctx.beginPath();\n      ctx.moveTo(x, 0);\n      ctx.lineTo(x, height);\n      ctx.stroke();\n    }\n    \n    for (let y = 0; y < height; y += 30) {\n      ctx.beginPath();\n      ctx.moveTo(0, y);\n      ctx.lineTo(width, y);\n      ctx.stroke();\n    }\n  };\n\n  const drawLink = (ctx, link) => {\n    const sourcePos = nodePositions[link.source];\n    const targetPos = nodePositions[link.target];\n    \n    if (!sourcePos || !targetPos) return;\n\n    ctx.strokeStyle = selectedNode === link.source || selectedNode === link.target \n      ? '#00d4ff' : 'rgba(0, 212, 255, 0.4)';\n    ctx.lineWidth = selectedNode === link.source || selectedNode === link.target ? 3 : 2;\n    \n    // Draw animated line\n    ctx.beginPath();\n    ctx.moveTo(sourcePos.x, sourcePos.y);\n    ctx.lineTo(targetPos.x, targetPos.y);\n    ctx.stroke();\n\n    // Draw distance label\n    const midX = (sourcePos.x + targetPos.x) / 2;\n    const midY = (sourcePos.y + targetPos.y) / 2;\n    \n    ctx.fillStyle = '#ffe66d';\n    ctx.font = '12px JetBrains Mono';\n    ctx.textAlign = 'center';\n    ctx.fillText(link.distance.toString(), midX, midY - 5);\n\n    // Draw data flow animation\n    if (isAnimating) {\n      drawDataFlow(ctx, sourcePos, targetPos);\n    }\n  };\n\n  const drawDataFlow = (ctx, source, target) => {\n    const time = Date.now() * 0.003;\n    const progress = (Math.sin(time) + 1) / 2;\n    \n    const x = source.x + (target.x - source.x) * progress;\n    const y = source.y + (target.y - source.y) * progress;\n    \n    ctx.fillStyle = '#4ecdc4';\n    ctx.beginPath();\n    ctx.arc(x, y, 3, 0, Math.PI * 2);\n    ctx.fill();\n    \n    ctx.shadowColor = '#4ecdc4';\n    ctx.shadowBlur = 10;\n    ctx.fill();\n    ctx.shadowBlur = 0;\n  };\n\n  const drawNode = (ctx, node) => {\n    const pos = nodePositions[node.id];\n    if (!pos) return;\n\n    const isSelected = selectedNode === node.id;\n    const time = Date.now() * 0.002;\n    const pulse = Math.sin(time) * 0.1 + 1;\n\n    // Draw node glow\n    if (isSelected || isAnimating) {\n      ctx.shadowColor = '#00d4ff';\n      ctx.shadowBlur = 20 * pulse;\n    }\n\n    // Draw main node\n    ctx.fillStyle = isSelected ? '#00d4ff' : '#ff6b6b';\n    ctx.beginPath();\n    ctx.arc(pos.x, pos.y, isSelected ? 25 * pulse : 20, 0, Math.PI * 2);\n    ctx.fill();\n    ctx.shadowBlur = 0;\n\n    // Draw inner circle\n    ctx.fillStyle = isSelected ? 'rgba(255, 255, 255, 0.8)' : 'rgba(255, 255, 255, 0.6)';\n    ctx.beginPath();\n    ctx.arc(pos.x, pos.y, isSelected ? 15 : 12, 0, Math.PI * 2);\n    ctx.fill();\n\n    // Draw node border\n    ctx.strokeStyle = isSelected ? '#ffffff' : 'rgba(255, 255, 255, 0.3)';\n    ctx.lineWidth = 2;\n    ctx.beginPath();\n    ctx.arc(pos.x, pos.y, isSelected ? 25 * pulse : 20, 0, Math.PI * 2);\n    ctx.stroke();\n  };\n\n  const drawNodeLabel = (ctx, node) => {\n    const pos = nodePositions[node.id];\n    if (!pos) return;\n\n    ctx.fillStyle = '#ffffff';\n    ctx.font = 'bold 16px Inter';\n    ctx.textAlign = 'center';\n    ctx.fillText(node.id, pos.x, pos.y + 5);\n  };\n\n  const handleCanvasClick = (event) => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n\n    // Check if click is on a node\n    let clickedNode = null;\n    for (const node of networkData.nodes) {\n      const pos = nodePositions[node.id];\n      if (pos) {\n        const distance = Math.sqrt((x - pos.x) ** 2 + (y - pos.y) ** 2);\n        if (distance <= 25) {\n          clickedNode = node.id;\n          break;\n        }\n      }\n    }\n\n    setSelectedNode(clickedNode);\n  };\n\n  const getSelectedNodeInfo = () => {\n    if (!selectedNode) return null;\n    return networkData.nodes.find(node => node.id === selectedNode);\n  };\n\n  if (loading) {\n    return (\n      <div className=\"network-loading\">\n        <motion.div\n          animate={{ rotate: 360 }}\n          transition={{ duration: 2, repeat: Infinity, ease: \"linear\" }}\n        >\n          <FiRefreshCw size={40} />\n        </motion.div>\n        <p>Loading network topology...</p>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"network-error\">\n        <p>Error: {error}</p>\n        <button onClick={fetchNetworkData} className=\"retry-button\">\n          <FiRefreshCw /> Retry\n        </button>\n      </div>\n    );\n  }\n\n  const selectedNodeInfo = getSelectedNodeInfo();\n\n  return (\n    <div className=\"network-visualization\">\n      <div className=\"network-header\">\n        <h2>Network Topology Overview</h2>\n        <div className=\"network-controls\">\n          <motion.button\n            className={`control-button ${isAnimating ? 'active' : ''}`}\n            onClick={() => setIsAnimating(!isAnimating)}\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n          >\n            {isAnimating ? <FiPause /> : <FiPlay />}\n          </motion.button>\n          <motion.button\n            className=\"control-button\"\n            onClick={fetchNetworkData}\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n          >\n            <FiRefreshCw />\n          </motion.button>\n          <motion.button\n            className=\"control-button\"\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n          >\n            <FiSettings />\n          </motion.button>\n        </div>\n      </div>\n\n      <div className=\"network-content\">\n        <div className=\"network-canvas-container\">\n          <canvas\n            ref={canvasRef}\n            className=\"network-canvas\"\n            onClick={handleCanvasClick}\n          />\n        </div>\n\n        <div className=\"network-sidebar\">\n          <div className=\"network-stats\">\n            <h3>Network Statistics</h3>\n            <div className=\"stat-grid\">\n              <div className=\"stat-box\">\n                <span className=\"stat-value\">{networkData.nodes.length}</span>\n                <span className=\"stat-label\">Nodes</span>\n              </div>\n              <div className=\"stat-box\">\n                <span className=\"stat-value\">{networkData.links.length}</span>\n                <span className=\"stat-label\">Links</span>\n              </div>\n            </div>\n          </div>\n\n          {selectedNodeInfo && (\n            <motion.div\n              className=\"node-details\"\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.3 }}\n            >\n              <h3>Node {selectedNodeInfo.id} Details</h3>\n              <div className=\"node-info\">\n                <p><strong>Neighbors:</strong> {selectedNodeInfo.neighbors.join(', ')}</p>\n                <div className=\"routing-table\">\n                  <h4>Routing Table</h4>\n                  <div className=\"table-container\">\n                    <table>\n                      <thead>\n                        <tr>\n                          <th>Dest</th>\n                          <th>Next Hop</th>\n                          <th>Distance</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {Object.entries(selectedNodeInfo.routing_table).map(([dest, info]) => (\n                          <tr key={dest}>\n                            <td>{dest}</td>\n                            <td>{info.next_hop || '-'}</td>\n                            <td>{info.distance === -1 ? '∞' : info.distance}</td>\n                          </tr>\n                        ))}\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              </div>\n            </motion.div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NetworkVisualization;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}