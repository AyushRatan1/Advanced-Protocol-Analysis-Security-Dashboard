.network-visualization {
  display: flex;
  flex-direction: column;
  min-height: 100vh;
  background: linear-gradient(135deg, rgba(15, 15, 25, 0.98) 0%, rgba(25, 25, 40, 0.98) 100%);
  border-radius: 16px;
  overflow: hidden;
  box-shadow: 0 12px 40px rgba(0, 0, 0, 0.4);
}

.network-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 24px 32px;
  background: linear-gradient(90deg, rgba(0, 212, 255, 0.15) 0%, rgba(76, 205, 196, 0.15) 100%);
  border-bottom: 2px solid rgba(0, 212, 255, 0.3);
  backdrop-filter: blur(20px);
}

.header-content h2 {
  color: #ffffff;
  font-size: 1.8rem;
  font-weight: 700;
  margin: 0 0 6px 0;
  background: linear-gradient(90deg, #00d4ff, #4ecdc4);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
}

.header-content p {
  color: rgba(255, 255, 255, 0.8);
  margin: 0;
  font-size: 1rem;
  font-weight: 400;
}

.header-controls {
  display: flex;
  gap: 16px;
}

.control-btn {
  display: flex;
  align-items: center;
  gap: 10px;
  padding: 12px 20px;
  border: 2px solid;
  border-radius: 12px;
  font-size: 0.95rem;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  backdrop-filter: blur(20px);
  position: relative;
  overflow: hidden;
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.control-btn::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent);
  transition: left 0.5s ease;
}

.control-btn:hover::before {
  left: 100%;
}

.control-btn.secondary {
  background: rgba(255, 255, 255, 0.08);
  border-color: rgba(255, 255, 255, 0.3);
  color: #ffffff;
}

.control-btn.secondary:hover:not(:disabled) {
  background: rgba(255, 255, 255, 0.15);
  border-color: rgba(255, 255, 255, 0.5);
  transform: translateY(-2px);
  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.3);
}

.control-btn.primary {
  background: linear-gradient(135deg, #00d4ff, #4ecdc4);
  border-color: #00d4ff;
  color: #000000;
  box-shadow: 0 4px 16px rgba(0, 212, 255, 0.4);
}

.control-btn.primary:hover:not(:disabled) {
  background: linear-gradient(135deg, #0099cc, #3ba99c);
  box-shadow: 0 8px 32px rgba(0, 212, 255, 0.5);
  transform: translateY(-2px);
}

.control-btn:disabled {
  opacity: 0.4;
  cursor: not-allowed;
  transform: none !important;
}

/* Topology Selector */
.topology-selector {
  padding: 32px;
  background: rgba(0, 0, 0, 0.05);
  flex: 1;
  overflow: visible;
}

.topology-selector h3 {
  display: flex;
  align-items: center;
  gap: 12px;
  color: #ffffff;
  font-size: 1.4rem;
  font-weight: 700;
  margin: 0 0 24px 0;
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
}

.topology-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  gap: 24px;
}

.topology-card {
  background: rgba(0, 0, 0, 0.4);
  border: 2px solid rgba(255, 255, 255, 0.15);
  border-radius: 16px;
  padding: 24px;
  cursor: pointer;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  backdrop-filter: blur(20px);
  position: relative;
  overflow: hidden;
}

.topology-card::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 3px;
  background: linear-gradient(90deg, transparent, rgba(0, 212, 255, 0.6), transparent);
  transform: translateX(-100%);
  transition: transform 0.3s ease;
}

.topology-card:hover::before {
  transform: translateX(100%);
}

.topology-card:hover {
  border-color: rgba(0, 212, 255, 0.5);
  transform: translateY(-6px) scale(1.02);
  box-shadow: 0 16px 40px rgba(0, 0, 0, 0.4);
}

.topology-card.active {
  border-color: #00d4ff;
  background: rgba(0, 212, 255, 0.15);
  box-shadow: 0 12px 32px rgba(0, 212, 255, 0.3);
}

.topology-preview {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 80px;
  margin-bottom: 20px;
  background: rgba(255, 255, 255, 0.05);
  border-radius: 12px;
  border: 1px solid rgba(255, 255, 255, 0.1);
}

.preview-icon {
  font-size: 2rem;
  color: #00d4ff;
  filter: drop-shadow(0 0 10px rgba(0, 212, 255, 0.5));
}

.topology-info h4 {
  color: #ffffff;
  font-size: 1.2rem;
  font-weight: 700;
  margin: 0 0 8px 0;
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
}

.topology-info p {
  color: rgba(255, 255, 255, 0.8);
  font-size: 0.95rem;
  margin: 0 0 16px 0;
  line-height: 1.5;
}

.topology-stats {
  display: flex;
  gap: 16px;
  justify-content: center;
}

.topology-stats .stat {
  font-size: 0.9rem;
  color: rgba(255, 255, 255, 0.7);
  text-align: center;
}

.topology-stats .stat strong {
  color: #00d4ff;
  font-weight: 700;
}

/* Network Display */
.network-display {
  flex: 1;
  padding: 32px;
  background: rgba(0, 0, 0, 0.05);
  overflow: visible;
}

.display-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 24px;
  flex-wrap: wrap;
  gap: 20px;
}

.current-topology-info h3 {
  color: #ffffff;
  font-size: 1.4rem;
  font-weight: 700;
  margin: 0 0 8px 0;
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
}

.current-topology-info p {
  color: rgba(255, 255, 255, 0.8);
  margin: 0;
  font-size: 1rem;
}

.network-stats {
  display: flex;
  gap: 24px;
}

.stat-item {
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
}

.stat-value {
  font-size: 1.8rem;
  font-weight: 800;
  color: #00d4ff;
  margin-bottom: 4px;
  text-shadow: 0 2px 8px rgba(0, 212, 255, 0.5);
}

.stat-label {
  font-size: 0.9rem;
  color: rgba(255, 255, 255, 0.7);
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

/* Network Canvas */
.network-canvas {
  background: rgba(0, 0, 0, 0.3);
  border: 2px solid rgba(0, 212, 255, 0.3);
  border-radius: 16px;
  padding: 24px;
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 450px;
  backdrop-filter: blur(20px);
  position: relative;
  overflow: hidden;
}

.network-svg {
  width: 100%;
  height: auto;
  max-width: 800px;
  border-radius: 12px;
  background: rgba(0, 0, 0, 0.2);
}

.network-link {
  filter: drop-shadow(0 0 4px rgba(0, 212, 255, 0.4));
}

.network-node {
  filter: drop-shadow(0 0 8px rgba(0, 212, 255, 0.6));
  cursor: pointer;
}

.node-label {
  text-shadow: 0 0 4px rgba(0, 0, 0, 0.8);
  pointer-events: none;
}

.cost-label {
  text-shadow: 0 0 4px rgba(0, 0, 0, 0.8);
  pointer-events: none;
}

/* Loading State */
.loading-state {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 64px 32px;
  text-align: center;
  color: rgba(255, 255, 255, 0.7);
}

.loading-state svg {
  color: #00d4ff;
  margin-bottom: 20px;
  filter: drop-shadow(0 0 10px rgba(0, 212, 255, 0.5));
}

.loading-state h3 {
  color: #ffffff;
  margin: 0 0 12px 0;
  font-size: 1.4rem;
  font-weight: 600;
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
}

.loading-state p {
  margin: 0;
  font-size: 1rem;
}

/* Network Info Panel */
.network-info-panel {
  padding: 32px;
  background: rgba(0, 0, 0, 0.3);
  border-top: 2px solid rgba(0, 212, 255, 0.3);
  backdrop-filter: blur(20px);
}

.network-info-panel h3 {
  color: #ffffff;
  font-size: 1.4rem;
  font-weight: 700;
  margin: 0 0 24px 0;
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
}

.info-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: 24px;
}

.info-card {
  background: rgba(0, 0, 0, 0.4);
  border: 2px solid rgba(255, 255, 255, 0.15);
  border-radius: 16px;
  padding: 24px;
  backdrop-filter: blur(20px);
  transition: all 0.3s ease;
}

.info-card:hover {
  border-color: rgba(0, 212, 255, 0.5);
  transform: translateY(-2px);
  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.3);
}

.info-card h4 {
  color: #00d4ff;
  font-size: 1.1rem;
  font-weight: 700;
  margin: 0 0 12px 0;
  text-shadow: 0 2px 4px rgba(0, 212, 255, 0.3);
}

.info-card p {
  color: rgba(255, 255, 255, 0.8);
  margin: 0;
  line-height: 1.5;
  font-size: 0.95rem;
}

/* Responsive Design */
@media (max-width: 1200px) {
  .topology-grid {
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 20px;
  }

  .network-stats {
    gap: 16px;
  }

  .display-header {
    flex-direction: column;
    align-items: stretch;
    gap: 16px;
  }

  .info-grid {
    grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
    gap: 20px;
  }
}

@media (max-width: 768px) {
  .network-header {
    flex-direction: column;
    gap: 20px;
    align-items: stretch;
    padding: 20px 24px;
  }

  .header-content h2 {
    font-size: 1.5rem;
  }

  .header-controls {
    justify-content: center;
    flex-wrap: wrap;
  }

  .topology-selector,
  .network-display,
  .network-info-panel {
    padding: 20px;
  }

  .topology-grid {
    grid-template-columns: 1fr;
    gap: 16px;
  }

  .topology-card {
    padding: 20px;
  }

  .network-stats {
    justify-content: center;
    flex-wrap: wrap;
    gap: 12px;
  }

  .stat-value {
    font-size: 1.5rem;
  }

  .info-grid {
    grid-template-columns: 1fr;
    gap: 16px;
  }

  .network-canvas {
    padding: 16px;
    min-height: 350px;
  }
}

@media (max-width: 480px) {
  .topology-selector,
  .network-display,
  .network-info-panel {
    padding: 16px;
  }

  .topology-card {
    padding: 16px;
  }

  .info-card {
    padding: 20px;
  }

  .control-btn {
    padding: 10px 16px;
    font-size: 0.9rem;
  }

  .network-canvas {
    padding: 12px;
    min-height: 300px;
  }

  .loading-state {
    padding: 40px 20px;
  }

  .preview-icon {
    font-size: 1.5rem;
  }

  .topology-preview {
    height: 60px;
  }
}

/* Animations */
@keyframes slideIn {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.topology-card {
  animation: slideIn 0.3s ease-out;
}

.topology-card:nth-child(2) { animation-delay: 0.1s; }
.topology-card:nth-child(3) { animation-delay: 0.2s; }
.topology-card:nth-child(4) { animation-delay: 0.3s; }

.info-card {
  animation: slideIn 0.3s ease-out;
}

.info-card:nth-child(2) { animation-delay: 0.1s; }
.info-card:nth-child(3) { animation-delay: 0.2s; }

@keyframes pulse {
  0%, 100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
}

.stat-item:hover .stat-value {
  animation: pulse 0.6s ease-in-out;
}
